{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\Search\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport search from './Search.module.css';\nimport loupe from './../../../../images/loupe.png';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = props => {\n  _s();\n  const [value, setValue] = useState('');\n  const filteredWords = data.filter(word => {\n    return word.name.toLowerCase().includes(value.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: search.search,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: search.search__form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search the word\",\n        className: search.search__form_input,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loupe,\n        alt: \"Loupe\",\n        className: search.search__form_img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["search","loupe","useState","jsxDEV","_jsxDEV","Search","props","_s","value","setValue","filteredWords","data","filter","word","name","toLowerCase","includes","className","children","search__form","type","placeholder","search__form_input","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","search__form_img","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/Search/Search.jsx"],"sourcesContent":["import search from './Search.module.css'\r\nimport loupe from './../../../../images/loupe.png'\r\nimport { useState } from 'react'\r\n\r\nconst Search = (props) => {\r\n\r\nconst [value, setValue] = useState('')\r\n\r\nconst filteredWords = data.filter(word => {\r\n    return word.name.toLowerCase().includes(value.toLowerCase())\r\n})\r\n\r\n    return(\r\n        <div className={search.search}>\r\n            <form className={search.search__form}>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Search the word' \r\n                    className={search.search__form_input}\r\n                    onChange={(e) => setValue(e.target.value)}>\r\n                </input>\r\n                <img src={loupe} alt='Loupe' className={search.search__form_img}></img>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,gCAAgC;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,aAAa,GAAGC,IAAI,CAACC,MAAM,CAACC,IAAI,IAAI;IACtC,OAAOA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,KAAK,CAACO,WAAW,CAAC,CAAC,CAAC;EAChE,CAAC,CAAC;EAEE,oBACIX,OAAA;IAAKa,SAAS,EAAEjB,MAAM,CAACA,MAAO;IAAAkB,QAAA,eAC1Bd,OAAA;MAAMa,SAAS,EAAEjB,MAAM,CAACmB,YAAa;MAAAD,QAAA,gBACjCd,OAAA;QACIgB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,iBAAiB;QAC7BJ,SAAS,EAAEjB,MAAM,CAACsB,kBAAmB;QACrCC,QAAQ,EAAGC,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACjB,KAAK;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACRzB,OAAA;QAAK0B,GAAG,EAAE7B,KAAM;QAAC8B,GAAG,EAAC,OAAO;QAACd,SAAS,EAAEjB,MAAM,CAACgC;MAAiB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAtB,EAAA,CArBKF,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAuBZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}