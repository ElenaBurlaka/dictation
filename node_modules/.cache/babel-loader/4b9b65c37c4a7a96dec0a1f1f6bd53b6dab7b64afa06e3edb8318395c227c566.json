{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport sidebar from './Sidebar.module.css';\nimport { NavLink } from 'react-router-dom';\n// import MyAccount from './MyAccount/MyAccount'\n// import user_photo from './../../images/user-photo.png'\nimport { useState } from 'react';\nimport User from './User/User';\nimport MyWords from '../Content/MyWords/MyWords';\nimport BurgerMenu from '../Sidebar/BurgerMenu/BurgerMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  onClose\n}) => {\n  _s();\n  // const [showAccountPopup, setShowAccountPopup] = useState(false)\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleSidebar = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // const handleOpenAccountPopup = () => {\n  //     setShowAccountPopup(true);\n  // };\n\n  // const handleCloseAccountPopup = () => {\n  //     setShowAccountPopup(false);\n  //     onClose()\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: sidebar.sidebar,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: sidebar.sidebar__user,\n        children: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: sidebar.sidebar__pages,\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/languages\",\n          children: \"My languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/words\",\n          children: \"My words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/dictation\",\n          children: \"Dictation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/settings\",\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `content ${isOpen ? 'shifted' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(MyWords, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["sidebar","NavLink","useState","User","MyWords","BurgerMenu","jsxDEV","_jsxDEV","Sidebar","onClose","_s","isOpen","setIsOpen","toggleSidebar","className","children","sidebar__user","fileName","_jsxFileName","lineNumber","columnNumber","sidebar__pages","to","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Sidebar/Sidebar.jsx"],"sourcesContent":["import sidebar from './Sidebar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n// import MyAccount from './MyAccount/MyAccount'\r\n// import user_photo from './../../images/user-photo.png'\r\nimport { useState } from 'react'\r\nimport User from './User/User'\r\nimport MyWords from '../Content/MyWords/MyWords'\r\nimport BurgerMenu from '../Sidebar/BurgerMenu/BurgerMenu'\r\n\r\nconst Sidebar = ({onClose}) => {\r\n\r\n    // const [showAccountPopup, setShowAccountPopup] = useState(false)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const toggleSidebar = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    // const handleOpenAccountPopup = () => {\r\n    //     setShowAccountPopup(true);\r\n    // };\r\n\r\n    // const handleCloseAccountPopup = () => {\r\n    //     setShowAccountPopup(false);\r\n    //     onClose()\r\n    // }\r\n\r\n    return(\r\n        <div className={sidebar.sidebar}>\r\n            <div className={`sidebar ${isOpen ? 'open' : ''}`}>\r\n            <div className={sidebar.sidebar__user} >\r\n                {/* onClick={handleOpenAccountPopup}> */}\r\n                {/* {showAccountPopup && <MyAccount onClose={handleCloseAccountPopup} />} */}\r\n                    <User />\r\n                </div>\r\n                <div className={sidebar.sidebar__pages}>\r\n                    <NavLink to='/languages'>My languages</NavLink>\r\n                    <NavLink to='/words'>My words</NavLink>\r\n                    <NavLink to='/dictation'>Dictation</NavLink>\r\n                    <NavLink to='/settings'>Settings</NavLink>\r\n                </div>\r\n                <div className={`content ${isOpen ? 'shifted' : ''}`}>\r\n                    <MyWords />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C;AACA;AACA,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,UAAU,MAAM,kCAAkC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,OAAO,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAE3B;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMW,aAAa,GAAGA,CAAA,KAAM;IACxBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACIJ,OAAA;IAAKO,SAAS,EAAEd,OAAO,CAACA,OAAQ;IAAAe,QAAA,eAC5BR,OAAA;MAAKO,SAAS,EAAG,WAAUH,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;MAAAI,QAAA,gBAClDR,OAAA;QAAKO,SAAS,EAAEd,OAAO,CAACgB,aAAc;QAAAD,QAAA,eAG9BR,OAAA,CAACJ,IAAI;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACNb,OAAA;QAAKO,SAAS,EAAEd,OAAO,CAACqB,cAAe;QAAAN,QAAA,gBACnCR,OAAA,CAACN,OAAO;UAACqB,EAAE,EAAC,YAAY;UAAAP,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC/Cb,OAAA,CAACN,OAAO;UAACqB,EAAE,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACvCb,OAAA,CAACN,OAAO;UAACqB,EAAE,EAAC,YAAY;UAAAP,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC5Cb,OAAA,CAACN,OAAO;UAACqB,EAAE,EAAC,WAAW;UAAAP,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACNb,OAAA;QAAKO,SAAS,EAAG,WAAUH,MAAM,GAAG,SAAS,GAAG,EAAG,EAAE;QAAAI,QAAA,eACjDR,OAAA,CAACH,OAAO;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAV,EAAA,CAtCKF,OAAO;AAAAe,EAAA,GAAPf,OAAO;AAwCb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}