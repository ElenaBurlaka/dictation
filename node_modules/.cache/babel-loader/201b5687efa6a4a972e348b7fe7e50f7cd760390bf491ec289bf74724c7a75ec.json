{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\EditPopup\\\\EditPopup.jsx\";\nimport editPopup from './EditPopup.module.css';\nimport close from './../../../../images/close.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  formData,\n  handleInput,\n  blurHandler,\n  onClose,\n  addField,\n  removeField,\n  index\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: editPopup.editPopup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: editPopup.editPopup__wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: editPopup.editPopup__content,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: editPopup.editPopup__content_close,\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: close,\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 94\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__inputs,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleInput,\n            onBlur: blurHandler,\n            name: \"word\",\n            type: \"text\",\n            placeholder: \"word\",\n            value: formData.word[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 25\n          }, this), formData.sentences.map((sentence, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: editPopup.editPopup__inputs_repeated,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: handleInput,\n                onBlur: blurHandler,\n                name: `sentence-${index}`,\n                type: \"text\",\n                placeholder: \"sentence with word\",\n                value: sentence.sentence[index],\n                \"data-index\": index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: handleInput,\n                onBlur: blurHandler,\n                name: `translation-${index}`,\n                type: \"text\",\n                placeholder: \"sentence translation\",\n                value: sentence.translation,\n                \"data-index\": index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this), formData.sentences.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                cursor: 'pointer',\n                marginLeft: '10px'\n              },\n              onClick: () => removeField(index),\n              children: \"\\u2013\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: mywordspopup.mywordspopup__buttons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addField,\n            children: \"add one more sentence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePublish,\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["editPopup","close","jsxDEV","_jsxDEV","EditPopup","formData","handleInput","blurHandler","onClose","addField","removeField","index","className","children","editPopup__wrapper","editPopup__content","editPopup__content_close","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","editPopup__inputs","onChange","onBlur","name","type","placeholder","value","word","sentences","map","sentence","style","display","editPopup__inputs_repeated","translation","length","cursor","marginLeft","mywordspopup","mywordspopup__buttons","handlePublish","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/EditPopup/EditPopup.jsx"],"sourcesContent":["import editPopup from './EditPopup.module.css'\r\nimport close from './../../../../images/close.png'\r\n\r\nconst EditPopup = ({formData, handleInput, blurHandler, onClose, addField, removeField, index}) => {\r\n    return(\r\n        <div className={editPopup.editPopup}>\r\n            <div className={editPopup.editPopup__wrapper}>\r\n                <div className={editPopup.editPopup__content}>\r\n                    <button className={editPopup.editPopup__content_close} onClick={onClose}><img src={close} alt='Close' /></button>\r\n                    <div className={editPopup.editPopup__inputs}>\r\n                        <input\r\n                            onChange={handleInput}\r\n                            onBlur={blurHandler}\r\n                            name='word'\r\n                            type='text'\r\n                            placeholder='word'\r\n                            value={formData.word[index]}\r\n                        />\r\n                        {/* {dirtyFields.word && errors.word && (\r\n                            <div style={{ color: 'red', fontSize: '12px' }}>{errors.word}</div>\r\n                        )} */}\r\n                        {formData.sentences.map((sentence, index) => (\r\n                            <div key={index} style={{ display: 'flex' }}>\r\n                                <div className={editPopup.editPopup__inputs_repeated}>\r\n                                    <input\r\n                                        onChange={handleInput}\r\n                                        onBlur={blurHandler}\r\n                                        name={`sentence-${index}`}\r\n                                        type='text'\r\n                                        placeholder='sentence with word'\r\n                                        value={sentence.sentence[index]}\r\n                                        data-index={index}\r\n                                    />\r\n                                    {/* {dirtyFields.sentences[index]?.sentence && errors.sentences[index]?.sentence && (\r\n                                        <div style={{ color: 'red', fontSize: '12px' }}>{errors.sentences[index].sentence}</div>\r\n                                    )} */}\r\n                                    <input\r\n                                        onChange={handleInput}\r\n                                        onBlur={blurHandler}\r\n                                        name={`translation-${index}`}\r\n                                        type='text'\r\n                                        placeholder='sentence translation'\r\n                                        value={sentence.translation}\r\n                                        data-index={index}\r\n                                    />\r\n                                    {/* {dirtyFields.sentences[index]?.translation && errors.sentences[index]?.translation && (\r\n                                        <div style={{ color: 'red', fontSize: '12px' }}>{errors.sentences[index].translation}</div>\r\n                                    )} */}\r\n                                </div>\r\n                                {formData.sentences.length > 1 && (\r\n                                    <span style={{ cursor: 'pointer', marginLeft: '10px' }} onClick={() => removeField(index)}>â€“</span>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={mywordspopup.mywordspopup__buttons}>\r\n                        <button onClick={addField}>add one more sentence</button>\r\n                        <button onClick={handlePublish} >done</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPopup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}