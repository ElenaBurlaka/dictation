{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWordsPopup\\\\EditPopup\\\\EditPopup.jsx\";\nimport editPopup from './EditPopup.module.css';\nimport close from './../../../../../images/close.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  formData,\n  handleInput,\n  blurHandler,\n  onClose,\n  addField,\n  removeField,\n  index,\n  handlePublish\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: editPopup.editPopup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: editPopup.editPopup__wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: editPopup.editPopup__content,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: editPopup.editPopup__content_close,\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: close,\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 94\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__inputs,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => handleInput(e, index, 'word'),\n            onBlur: e => blurHandler(e, index, 'word'),\n            type: \"text\",\n            placeholder: \"word\",\n            value: formData.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 25\n          }, this), formData.sentences.map((sentence, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: editPopup.editPopup__inputs_repeated,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleInput(e, i, 'sentence'),\n                onBlur: e => blurHandler(e, i, 'sentence'),\n                name: `sentence-${i}`,\n                type: \"text\",\n                placeholder: \"sentence with word\",\n                value: sentence.sentence,\n                \"data-index\": i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleInput(e, i, 'translation'),\n                onBlur: e => blurHandler(e, i, 'translation'),\n                name: `translation-${i}`,\n                type: \"text\",\n                placeholder: \"sentence translation\",\n                value: sentence.translation,\n                \"data-index\": i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 33\n            }, this), formData.sentences.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                cursor: 'pointer',\n                marginLeft: '10px'\n              },\n              onClick: () => removeField(i),\n              children: \"\\u2013\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__buttons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addField,\n            children: \"add one more sentence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePublish,\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["editPopup","close","jsxDEV","_jsxDEV","EditPopup","formData","handleInput","blurHandler","onClose","addField","removeField","index","handlePublish","className","children","editPopup__wrapper","editPopup__content","editPopup__content_close","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","editPopup__inputs","onChange","e","onBlur","type","placeholder","value","word","sentences","map","sentence","i","style","display","editPopup__inputs_repeated","name","translation","length","cursor","marginLeft","editPopup__buttons","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/MyWordsPopup/EditPopup/EditPopup.jsx"],"sourcesContent":["import editPopup from './EditPopup.module.css';\r\nimport close from './../../../../../images/close.png';\r\n\r\nconst EditPopup = ({ formData, handleInput, blurHandler, onClose, addField, removeField, index, handlePublish }) => {\r\n    return (\r\n        <div className={editPopup.editPopup}>\r\n            <div className={editPopup.editPopup__wrapper}>\r\n                <div className={editPopup.editPopup__content}>\r\n                    <button className={editPopup.editPopup__content_close} onClick={onClose}><img src={close} alt='Close' /></button>\r\n                    <div className={editPopup.editPopup__inputs}>\r\n                        <input\r\n                            onChange={(e) => handleInput(e, index, 'word')}\r\n                            onBlur={(e) => blurHandler(e, index, 'word')}\r\n                            type='text'\r\n                            placeholder='word'\r\n                            value={formData.word}\r\n                        />\r\n                        {formData.sentences.map((sentence, i) => (\r\n                            <div key={i} style={{ display: 'flex' }}>\r\n                                <div className={editPopup.editPopup__inputs_repeated}>\r\n                                    <input\r\n                                        onChange={(e) => handleInput(e, i, 'sentence')}\r\n                                        onBlur={(e) => blurHandler(e, i, 'sentence')}\r\n                                        name={`sentence-${i}`}\r\n                                        type='text'\r\n                                        placeholder='sentence with word'\r\n                                        value={sentence.sentence}\r\n                                        data-index={i}\r\n                                    />\r\n                                    <input\r\n                                        onChange={(e) => handleInput(e, i, 'translation')}\r\n                                        onBlur={(e) => blurHandler(e, i, 'translation')}\r\n                                        name={`translation-${i}`}\r\n                                        type='text'\r\n                                        placeholder='sentence translation'\r\n                                        value={sentence.translation}\r\n                                        data-index={i}\r\n                                    />\r\n                                </div>\r\n                                {formData.sentences.length > 1 && (\r\n                                    <span style={{ cursor: 'pointer', marginLeft: '10px' }} onClick={() => removeField(i)}>â€“</span>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={editPopup.editPopup__buttons}>\r\n                        <button onClick={addField}>add one more sentence</button>\r\n                        <button onClick={handlePublish}>done</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPopup;\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,WAAW;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,KAAK;EAAEC;AAAc,CAAC,KAAK;EAChH,oBACIT,OAAA;IAAKU,SAAS,EAAEb,SAAS,CAACA,SAAU;IAAAc,QAAA,eAChCX,OAAA;MAAKU,SAAS,EAAEb,SAAS,CAACe,kBAAmB;MAAAD,QAAA,eACzCX,OAAA;QAAKU,SAAS,EAAEb,SAAS,CAACgB,kBAAmB;QAAAF,QAAA,gBACzCX,OAAA;UAAQU,SAAS,EAAEb,SAAS,CAACiB,wBAAyB;UAACC,OAAO,EAAEV,OAAQ;UAAAM,QAAA,eAACX,OAAA;YAAKgB,GAAG,EAAElB,KAAM;YAACmB,GAAG,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjHrB,OAAA;UAAKU,SAAS,EAAEb,SAAS,CAACyB,iBAAkB;UAAAX,QAAA,gBACxCX,OAAA;YACIuB,QAAQ,EAAGC,CAAC,IAAKrB,WAAW,CAACqB,CAAC,EAAEhB,KAAK,EAAE,MAAM,CAAE;YAC/CiB,MAAM,EAAGD,CAAC,IAAKpB,WAAW,CAACoB,CAAC,EAAEhB,KAAK,EAAE,MAAM,CAAE;YAC7CkB,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,MAAM;YAClBC,KAAK,EAAE1B,QAAQ,CAAC2B;UAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,EACDnB,QAAQ,CAAC4B,SAAS,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,CAAC,kBAChCjC,OAAA;YAAakC,KAAK,EAAE;cAAEC,OAAO,EAAE;YAAO,CAAE;YAAAxB,QAAA,gBACpCX,OAAA;cAAKU,SAAS,EAAEb,SAAS,CAACuC,0BAA2B;cAAAzB,QAAA,gBACjDX,OAAA;gBACIuB,QAAQ,EAAGC,CAAC,IAAKrB,WAAW,CAACqB,CAAC,EAAES,CAAC,EAAE,UAAU,CAAE;gBAC/CR,MAAM,EAAGD,CAAC,IAAKpB,WAAW,CAACoB,CAAC,EAAES,CAAC,EAAE,UAAU,CAAE;gBAC7CI,IAAI,EAAG,YAAWJ,CAAE,EAAE;gBACtBP,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,oBAAoB;gBAChCC,KAAK,EAAEI,QAAQ,CAACA,QAAS;gBACzB,cAAYC;cAAE;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC,eACFrB,OAAA;gBACIuB,QAAQ,EAAGC,CAAC,IAAKrB,WAAW,CAACqB,CAAC,EAAES,CAAC,EAAE,aAAa,CAAE;gBAClDR,MAAM,EAAGD,CAAC,IAAKpB,WAAW,CAACoB,CAAC,EAAES,CAAC,EAAE,aAAa,CAAE;gBAChDI,IAAI,EAAG,eAAcJ,CAAE,EAAE;gBACzBP,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,sBAAsB;gBAClCC,KAAK,EAAEI,QAAQ,CAACM,WAAY;gBAC5B,cAAYL;cAAE;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,EACLnB,QAAQ,CAAC4B,SAAS,CAACS,MAAM,GAAG,CAAC,iBAC1BvC,OAAA;cAAMkC,KAAK,EAAE;gBAAEM,MAAM,EAAE,SAAS;gBAAEC,UAAU,EAAE;cAAO,CAAE;cAAC1B,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAAC0B,CAAC,CAAE;cAAAtB,QAAA,EAAC;YAAC;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACjG;UAAA,GAvBKY,CAAC;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAwBN,CACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNrB,OAAA;UAAKU,SAAS,EAAEb,SAAS,CAAC6C,kBAAmB;UAAA/B,QAAA,gBACzCX,OAAA;YAAQe,OAAO,EAAET,QAAS;YAAAK,QAAA,EAAC;UAAqB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzDrB,OAAA;YAAQe,OAAO,EAAEN,aAAc;YAAAE,QAAA,EAAC;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAsB,EAAA,GAlDK1C,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}