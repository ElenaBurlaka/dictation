{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWordsPopup\\\\EditPopup\\\\EditPopup.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport editPopup from './EditPopup.module.css';\nimport close from './../../../../../images/close.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  formData,\n  onClose,\n  addField,\n  handleInput,\n  removeField,\n  handlePublish,\n  setShowEditPopup\n}) => {\n  _s();\n  const [localFormData, setLocalFormData] = useState({\n    ...formData\n  });\n  const [sentenceErrors, setSentenceErrors] = useState([]);\n  const [translationErrors, setTranslationErrors] = useState([]);\n  const [editFormValid, setEditFormValid] = useState(false);\n  const [wordErrors, setWordErrors] = useState('');\n  const popupRef = useRef(null);\n  useEffect(() => {\n    setLocalFormData({\n      ...formData\n    });\n  }, [formData]);\n  useEffect(() => {\n    validateForm();\n  }, [localFormData]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (popupRef.current && !popupRef.current.contains(event.target)) {\n        onClose(); // Закрываем попап, если клик снаружи\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [onClose]);\n  const validateForm = () => {\n    const newSentenceErrors = [];\n    const newTranslationErrors = [];\n    let newWordError = '';\n    if (!localFormData.word.trim()) {\n      newWordError = \"Word field can't be empty\";\n    }\n    localFormData.sentences.forEach((sentence, i) => {\n      newSentenceErrors[i] = sentence.sentence.trim() ? '' : \"Sentence field can't be empty\";\n      newTranslationErrors[i] = sentence.translation.trim() ? '' : \"Translation field can't be empty\";\n    });\n    setSentenceErrors(newSentenceErrors);\n    setTranslationErrors(newTranslationErrors);\n    setWordErrors(newWordError);\n    const isFormValid = !newWordError && newSentenceErrors.every(err => !err) && newTranslationErrors.every(err => !err);\n    setEditFormValid(isFormValid);\n  };\n  const handleLocalInput = (e, field) => {\n    const {\n      value\n    } = e.target;\n    setLocalFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      if (field === 'word') {\n        updatedData.word = value;\n      } else {\n        const [type, idx] = field.split('-');\n        updatedData.sentences[idx][type] = value;\n      }\n      return updatedData;\n    });\n  };\n  const handleLocalRemoveField = index => {\n    setLocalFormData(prevData => {\n      const updatedSentences = prevData.sentences.filter((_, i) => i !== index);\n      return {\n        ...prevData,\n        sentences: updatedSentences\n      };\n    });\n  };\n  const handlePublishInEdit = () => {\n    handleInput({\n      target: {\n        value: localFormData.word\n      }\n    }, 0, 'word');\n    localFormData.sentences.forEach((sentence, i) => {\n      handleInput({\n        target: {\n          value: sentence.sentence\n        }\n      }, 0, `sentence-${i}`);\n      handleInput({\n        target: {\n          value: sentence.translation\n        }\n      }, 0, `translation-${i}`);\n    });\n    handlePublish(localFormData);\n    setShowEditPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: editPopup.editPopup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: editPopup.editPopup__overlay,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: popupRef,\n        className: editPopup.editPopup__wrapper,\n        onMouseDown: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__content,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: editPopup.editPopup__content_close,\n            onClick: onClose,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: close,\n              alt: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: editPopup.editPopup__inputs,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleLocalInput(e, 'word'),\n              type: \"text\",\n              placeholder: \"word\",\n              value: localFormData.word,\n              className: editPopup.editPopup__input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), wordErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: editPopup.editPopup__error,\n              children: wordErrors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 44\n            }, this), localFormData.sentences.map((sentence, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: editPopup.editPopup__sentenceContainer,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: editPopup.editPopup__inputs_repeated,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => handleLocalInput(e, `sentence-${i}`),\n                  type: \"text\",\n                  placeholder: \"sentence with word\",\n                  value: sentence.sentence,\n                  className: editPopup.editPopup__input\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 41\n                }, this), sentenceErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: editPopup.editPopup__error,\n                  children: sentenceErrors[i]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => handleLocalInput(e, `translation-${i}`),\n                  type: \"text\",\n                  placeholder: \"sentence translation\",\n                  value: sentence.translation,\n                  className: editPopup.editPopup__input\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 41\n                }, this), translationErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: editPopup.editPopup__error,\n                  children: translationErrors[i]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this), localFormData.sentences.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: editPopup.editPopup__removeField,\n                onClick: e => {\n                  e.stopPropagation();\n                  handleLocalRemoveField(i);\n                },\n                children: \"\\u2013\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 41\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: editPopup.editPopup__buttons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addField,\n              className: editPopup.editPopup__addButton,\n              children: \"Add one more sentence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePublishInEdit,\n              disabled: !editFormValid,\n              className: editPopup.editPopup__doneButton,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPopup, \"jXmWC05GjQMoA/tQnX8OoA5O18w=\");\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["useState","useEffect","useRef","editPopup","close","jsxDEV","_jsxDEV","EditPopup","formData","onClose","addField","handleInput","removeField","handlePublish","setShowEditPopup","_s","localFormData","setLocalFormData","sentenceErrors","setSentenceErrors","translationErrors","setTranslationErrors","editFormValid","setEditFormValid","wordErrors","setWordErrors","popupRef","validateForm","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","newSentenceErrors","newTranslationErrors","newWordError","word","trim","sentences","forEach","sentence","i","translation","isFormValid","every","err","handleLocalInput","e","field","value","prevData","updatedData","type","idx","split","handleLocalRemoveField","index","updatedSentences","filter","_","handlePublishInEdit","className","children","editPopup__overlay","onClick","ref","editPopup__wrapper","onMouseDown","stopPropagation","editPopup__content","editPopup__content_close","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","editPopup__inputs","onChange","placeholder","editPopup__input","editPopup__error","map","editPopup__sentenceContainer","editPopup__inputs_repeated","length","editPopup__removeField","editPopup__buttons","editPopup__addButton","disabled","editPopup__doneButton","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/MyWordsPopup/EditPopup/EditPopup.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport editPopup from './EditPopup.module.css';\r\nimport close from './../../../../../images/close.png';\r\n\r\nconst EditPopup = ({\r\n    formData,\r\n    onClose,\r\n    addField,\r\n    handleInput,\r\n    removeField,\r\n    handlePublish,\r\n    setShowEditPopup,\r\n}) => {\r\n    const [localFormData, setLocalFormData] = useState({ ...formData });\r\n    const [sentenceErrors, setSentenceErrors] = useState([]);\r\n    const [translationErrors, setTranslationErrors] = useState([]);\r\n    const [editFormValid, setEditFormValid] = useState(false);\r\n    const [wordErrors, setWordErrors] = useState('');\r\n    const popupRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setLocalFormData({ ...formData });\r\n    }, [formData]);\r\n\r\n    useEffect(() => {\r\n        validateForm();\r\n    }, [localFormData]);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (popupRef.current && !popupRef.current.contains(event.target)) {\r\n                onClose(); // Закрываем попап, если клик снаружи\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [onClose]);\r\n\r\n    const validateForm = () => {\r\n        const newSentenceErrors = [];\r\n        const newTranslationErrors = [];\r\n        let newWordError = '';\r\n\r\n        if (!localFormData.word.trim()) {\r\n            newWordError = \"Word field can't be empty\";\r\n        }\r\n\r\n        localFormData.sentences.forEach((sentence, i) => {\r\n            newSentenceErrors[i] = sentence.sentence.trim() ? '' : \"Sentence field can't be empty\";\r\n            newTranslationErrors[i] = sentence.translation.trim() ? '' : \"Translation field can't be empty\";\r\n        });\r\n\r\n        setSentenceErrors(newSentenceErrors);\r\n        setTranslationErrors(newTranslationErrors);\r\n        setWordErrors(newWordError);\r\n\r\n        const isFormValid =\r\n            !newWordError &&\r\n            newSentenceErrors.every((err) => !err) &&\r\n            newTranslationErrors.every((err) => !err);\r\n\r\n        setEditFormValid(isFormValid);\r\n    };\r\n\r\n    const handleLocalInput = (e, field) => {\r\n        const { value } = e.target;\r\n        setLocalFormData((prevData) => {\r\n            const updatedData = { ...prevData };\r\n            if (field === 'word') {\r\n                updatedData.word = value;\r\n            } else {\r\n                const [type, idx] = field.split('-');\r\n                updatedData.sentences[idx][type] = value;\r\n            }\r\n            return updatedData;\r\n        });\r\n    };\r\n\r\n    const handleLocalRemoveField = (index) => {\r\n        setLocalFormData((prevData) => {\r\n            const updatedSentences = prevData.sentences.filter((_, i) => i !== index);\r\n            return { ...prevData, sentences: updatedSentences };\r\n        });\r\n    };\r\n\r\n    const handlePublishInEdit = () => {\r\n        handleInput({ target: { value: localFormData.word } }, 0, 'word');\r\n        localFormData.sentences.forEach((sentence, i) => {\r\n            handleInput({ target: { value: sentence.sentence } }, 0, `sentence-${i}`);\r\n            handleInput({ target: { value: sentence.translation } }, 0, `translation-${i}`);\r\n        });\r\n\r\n        handlePublish(localFormData);\r\n        setShowEditPopup(false);\r\n    };\r\n\r\n    return (\r\n        <div className={editPopup.editPopup}>\r\n            <div className={editPopup.editPopup__overlay} onClick={onClose}>\r\n                <div\r\n                    ref={popupRef}\r\n                    className={editPopup.editPopup__wrapper}\r\n                    onMouseDown={(e) => e.stopPropagation()}\r\n                >\r\n                    <div className={editPopup.editPopup__content}>\r\n                        <button className={editPopup.editPopup__content_close} onClick={onClose}>\r\n                            <img src={close} alt=\"Close\" />\r\n                        </button>\r\n                        <div className={editPopup.editPopup__inputs}>\r\n                            <input\r\n                                onChange={(e) => handleLocalInput(e, 'word')}\r\n                                type=\"text\"\r\n                                placeholder=\"word\"\r\n                                value={localFormData.word}\r\n                                className={editPopup.editPopup__input}\r\n                            />\r\n                            {wordErrors && <div className={editPopup.editPopup__error}>{wordErrors}</div>}\r\n                            {localFormData.sentences.map((sentence, i) => (\r\n                                <div key={i} className={editPopup.editPopup__sentenceContainer}>\r\n                                    <div className={editPopup.editPopup__inputs_repeated}>\r\n                                        <input\r\n                                            onChange={(e) => handleLocalInput(e, `sentence-${i}`)}\r\n                                            type=\"text\"\r\n                                            placeholder=\"sentence with word\"\r\n                                            value={sentence.sentence}\r\n                                            className={editPopup.editPopup__input}\r\n                                        />\r\n                                        {sentenceErrors[i] && (\r\n                                            <div className={editPopup.editPopup__error}>{sentenceErrors[i]}</div>\r\n                                        )}\r\n                                        <input\r\n                                            onChange={(e) => handleLocalInput(e, `translation-${i}`)}\r\n                                            type=\"text\"\r\n                                            placeholder=\"sentence translation\"\r\n                                            value={sentence.translation}\r\n                                            className={editPopup.editPopup__input}\r\n                                        />\r\n                                        {translationErrors[i] && (\r\n                                            <div className={editPopup.editPopup__error}>{translationErrors[i]}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    {localFormData.sentences.length > 1 && (\r\n                                        <span\r\n                                            className={editPopup.editPopup__removeField}\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                handleLocalRemoveField(i);\r\n                                            }}\r\n                                        >\r\n                                            –\r\n                                        </span>\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className={editPopup.editPopup__buttons}>\r\n                            <button onClick={addField} className={editPopup.editPopup__addButton}>\r\n                                Add one more sentence\r\n                            </button>\r\n                            <button\r\n                                onClick={handlePublishInEdit}\r\n                                disabled={!editFormValid}\r\n                                className={editPopup.editPopup__doneButton}\r\n                            >\r\n                                Done\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}