{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\Dictation\\\\StartDictation\\\\StartDictation.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport startDictation from './StartDictation.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StartDictation = ({\n  formData\n}) => {\n  _s();\n  const [randomTranslation, setRandomTranslation] = useState('');\n  const getRandomTranslation = () => {\n    if (formData && formData.length > 0) {\n      const allSentences = formData.flatMap(word => word.sentences);\n      const randomIndex = Math.floor(Math.random() * allSentences.length);\n      setRandomTranslation(allSentences[randomIndex].translation);\n    } else {\n      console.error('formData is undefined or empty');\n    }\n  };\n  const getTranslate = () => {\n    if (formData && formData.length > 0) {\n      setRandomTranslation(sentence);\n    } else {\n      console.error('formData is undefined or empty');\n    }\n  };\n  useEffect(() => {\n    getRandomTranslation();\n  }, [formData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: startDictation.startDictation,\n    children: [randomTranslation && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: randomTranslation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getTranslate,\n      className: startDictation.startDictation__showTranslation,\n      children: \"Show translation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(StartDictation, \"aPnBBbLcEtiyhHfFC687BO5Bv2Y=\");\n_c = StartDictation;\nexport default StartDictation;\nvar _c;\n$RefreshReg$(_c, \"StartDictation\");","map":{"version":3,"names":["useEffect","useState","startDictation","jsxDEV","_jsxDEV","StartDictation","formData","_s","randomTranslation","setRandomTranslation","getRandomTranslation","length","allSentences","flatMap","word","sentences","randomIndex","Math","floor","random","translation","console","error","getTranslate","sentence","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","startDictation__showTranslation","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/Dictation/StartDictation/StartDictation.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport startDictation from './StartDictation.module.css'\r\n\r\nconst StartDictation = ({ formData }) => {\r\n\r\n    const [randomTranslation, setRandomTranslation] = useState('')\r\n\r\n    const getRandomTranslation = () => {\r\n        if (formData && formData.length > 0) {\r\n            const allSentences = formData.flatMap(word => word.sentences)\r\n            const randomIndex = Math.floor(Math.random() * allSentences.length);\r\n            setRandomTranslation(allSentences[randomIndex].translation)\r\n        } else {\r\n            console.error('formData is undefined or empty')\r\n        }\r\n    }\r\n\r\n    const getTranslate = () => {\r\n        if (formData && formData.length > 0) {\r\n            setRandomTranslation(sentence);\r\n        } else {\r\n            console.error('formData is undefined or empty')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRandomTranslation()\r\n    }, [formData])\r\n\r\n    return(\r\n        <div className={startDictation.startDictation}>\r\n            {randomTranslation && <p>{randomTranslation}</p>}\r\n            <button onClick={getTranslate} className={startDictation.startDictation__showTranslation}>Show translation</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartDictation;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAErC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMS,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,IAAIJ,QAAQ,IAAIA,QAAQ,CAACK,MAAM,GAAG,CAAC,EAAE;MACjC,MAAMC,YAAY,GAAGN,QAAQ,CAACO,OAAO,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;MAC7D,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,YAAY,CAACD,MAAM,CAAC;MACnEF,oBAAoB,CAACG,YAAY,CAACI,WAAW,CAAC,CAACI,WAAW,CAAC;IAC/D,CAAC,MAAM;MACHC,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;IACnD;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIjB,QAAQ,IAAIA,QAAQ,CAACK,MAAM,GAAG,CAAC,EAAE;MACjCF,oBAAoB,CAACe,QAAQ,CAAC;IAClC,CAAC,MAAM;MACHH,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;IACnD;EACJ,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACZU,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACIF,OAAA;IAAKqB,SAAS,EAAEvB,cAAc,CAACA,cAAe;IAAAwB,QAAA,GACzClB,iBAAiB,iBAAIJ,OAAA;MAAAsB,QAAA,EAAIlB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChD1B,OAAA;MAAQ2B,OAAO,EAAER,YAAa;MAACE,SAAS,EAAEvB,cAAc,CAAC8B,+BAAgC;MAAAN,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClH,CAAC;AAEd,CAAC;AAAAvB,EAAA,CAhCKF,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}