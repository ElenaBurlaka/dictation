{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWords.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport mywords from './MyWords.module.css';\nimport MyWordsPopup from './MyWordsPopup/MyWordsPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyWords = props => {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [data, setData] = useState([]);\n  const inputRef = useRef(null);\n  const addWord = wordData => {\n    setData(prevData => [...prevData, wordData, {\n      no: count++,\n      text: inputRef.current,\n      display: ''\n    }]);\n    inputRef.current.value = '';\n    localStorage.setItem('posts_count', count);\n    setShowPopup(false); // Закрыть попап после добавления слова\n  };\n  useEffect(() => {\n    setData(JSON.parse(localStorage.getItem('data')) || []);\n    count = localStorage.getItem('posts_count');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mywords.mywords,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: mywords.mywords__wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: mywords.mywords__wrapper_header,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"(you have \", data.length, \" words)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: mywords.mywords__wrapper_content,\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: item.sentences.map((sentence, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [sentence.sentence, \" - \", sentence.translation]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mywords.mywords__button,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: mywords.mywords__button_button,\n        onClick: () => setShowPopup(true),\n        children: \"Add a word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(MyWordsPopup, {\n        onClose: () => setShowPopup(false),\n        addWord: addWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(MyWords, \"Apml5CNO0x7gDEQxnNbAIEOJcro=\");\n_c = MyWords;\nexport default MyWords;\nvar _c;\n$RefreshReg$(_c, \"MyWords\");","map":{"version":3,"names":["useState","useRef","useEffect","mywords","MyWordsPopup","jsxDEV","_jsxDEV","MyWords","props","_s","showPopup","setShowPopup","data","setData","inputRef","addWord","wordData","prevData","no","count","text","current","display","value","localStorage","setItem","JSON","parse","getItem","className","children","mywords__wrapper","mywords__wrapper_header","fileName","_jsxFileName","lineNumber","columnNumber","length","mywords__wrapper_content","map","item","index","word","sentences","sentence","i","translation","mywords__button","mywords__button_button","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/french-app/src/components/Content/MyWords/MyWords.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport mywords from './MyWords.module.css';\r\nimport MyWordsPopup from './MyWordsPopup/MyWordsPopup';\r\n\r\nconst MyWords = (props) => {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const inputRef = useRef(null)\r\n\r\n    const addWord = (wordData) => {\r\n        setData(prevData => [...prevData, wordData, {no: count++, text: inputRef.current, display: ''}]);\r\n        inputRef.current.value = '';\r\n        localStorage.setItem('posts_count', count)\r\n        setShowPopup(false); // Закрыть попап после добавления слова\r\n    };\r\n\r\n    useEffect (() => {\r\n        setData(JSON.parse(localStorage.getItem('data')) || [])\r\n        count = localStorage.getItem('posts_count')\r\n    }, [])\r\n\r\n    return (\r\n        <div className={mywords.mywords}>\r\n            <div className={mywords.mywords__wrapper}>\r\n                <div className={mywords.mywords__wrapper_header}>\r\n                    <h1>My words</h1>\r\n                    <p>(you have {data.length} words)</p>\r\n                </div>\r\n                <div className={mywords.mywords__wrapper_content}>\r\n                    {data.map((item, index) => (\r\n                        <div key={index}>\r\n                            <p>{item.word}</p>\r\n                            <ul>\r\n                                {item.sentences.map((sentence, i) => (\r\n                                    <li key={i}>{sentence.sentence} - {sentence.translation}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className={mywords.mywords__button}>\r\n                <button className={mywords.mywords__button_button} onClick={() => setShowPopup(true)}>Add a word</button>\r\n                {showPopup && <MyWordsPopup onClose={() => setShowPopup(false)} addWord={addWord} />}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyWords;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}