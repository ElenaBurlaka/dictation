{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWordsPopup\\\\MyWordsPopup.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport mywordspopup from './MyWordsPopup.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyWordsPopup = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    word: '',\n    sentences: [{\n      sentence: '',\n      translation: ''\n    }]\n  });\n  const [fieldEmpty, setFieldEmpty] = useState(\"Field can't be empty\");\n  useEffect(() => {\n    console.log(formData);\n  }, [formData]);\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      type\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData\n    }));\n  }\n  function handleInput(event) {\n    event.preventDefault();\n    if (formData.word === '') {\n      setFieldEmpty(\"Field can't be empty\");\n    } else setFieldEmpty('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mywordspopup.mywordspopup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mywordspopup.mywordspopup__wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: mywordspopup.mywordspopup__content,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleInput,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: mywordspopup.mywordspopup__inputs,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              value: formData.word,\n              type: \"text\",\n              placeholder: \"word\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              type: \"text\",\n              placeholder: \"sentence with word\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              type: \"text\",\n              placeholder: \"sentence translation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: mywordspopup.mywordspopup__buttons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"add one more sentence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(MyWordsPopup, \"WDBGTfHp/YuP5KeMAjU64XxuWTE=\");\n_c = MyWordsPopup;\nexport default MyWordsPopup;\nvar _c;\n$RefreshReg$(_c, \"MyWordsPopup\");","map":{"version":3,"names":["useEffect","useState","mywordspopup","jsxDEV","_jsxDEV","MyWordsPopup","_s","formData","setFormData","word","sentences","sentence","translation","fieldEmpty","setFieldEmpty","console","log","handleChange","event","name","value","type","target","prevFormData","handleInput","preventDefault","className","children","mywordspopup__wrapper","mywordspopup__content","onSubmit","mywordspopup__inputs","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","mywordspopup__buttons","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/french-app/src/components/Content/MyWords/MyWordsPopup/MyWordsPopup.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport mywordspopup from './MyWordsPopup.module.css'\r\n\r\nconst MyWordsPopup = () => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        word: '',\r\n        sentences: [\r\n            {\r\n                sentence: '',\r\n                translation: ''\r\n            }\r\n        ]\r\n    })\r\n\r\n    const [fieldEmpty, setFieldEmpty] = useState(\"Field can't be empty\");\r\n\r\n    useEffect(() => {\r\n        console.log(formData)\r\n    }, [formData])\r\n\r\n    function handleChange(event) {\r\n        const {name, value, type} = event.target;\r\n        setFormData((prevFormData) => ({\r\n            ...prevFormData,\r\n        }))\r\n    }\r\n\r\n    function handleInput(event) {\r\n        event.preventDefault();\r\n        if (formData.word === '') {\r\n            setFieldEmpty(\"Field can't be empty\")\r\n        } else (\r\n            setFieldEmpty('')\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className={mywordspopup.mywordspopup}>\r\n            <div className={mywordspopup.mywordspopup__wrapper}>\r\n                <div className={mywordspopup.mywordspopup__content}>\r\n                    <form onSubmit={handleInput}>\r\n                        <div className={mywordspopup.mywordspopup__inputs}>\r\n                            <input onChange={handleChange} value={formData.word} type='text' placeholder='word'></input>\r\n                            <input onChange={handleChange} type='text' placeholder='sentence with word'></input>\r\n                            <input onChange={handleChange} type='text' placeholder='sentence translation'></input>\r\n                        </div>\r\n                        <div className={mywordspopup.mywordspopup__buttons}>\r\n                            <button>add one more sentence</button>\r\n                            <button>done</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyWordsPopup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}