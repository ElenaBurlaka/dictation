{"ast":null,"code":"import{useEffect,useState}from'react';import startDictation from'./StartDictation.module.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const StartDictation=_ref=>{let{formData}=_ref;const[randomTranslation,setRandomTranslation]=useState('');const[randomSentence,setRandomSentence]=useState('');const[showTranslation,setShowTranslation]=useState(false);const[availableSentences,setAvailableSentences]=useState(formData.flatMap(word=>word.sentences));// const [currentIndex, setCurrentIndex] = useState(0);\nconst[usedIndices,setUsedIndices]=useState([]);const[message,setMessage]=useState('');const getRandomSentence=()=>{if(usedIndices.length>=availableSentences.length){setMessage('You checked all the sentences');setRandomSentence('');setRandomTranslation('');return;}let randomIndex;do{randomIndex=Math.floor(Math.random()*availableSentences.length);}while(usedIndices.includes(randomIndex));setUsedIndices(prev=>[...prev,randomIndex]);const selectedSentence=availableSentences[randomIndex];setRandomSentence(selectedSentence.sentence);setRandomTranslation(selectedSentence.translation);setShowTranslation(false);setMessage('');};useEffect(()=>{getRandomSentence();},[]);const handleShowTranslation=()=>{setShowTranslation(true);};const startOver=()=>{setUsedIndices([]);setMessage('');setRandomSentence('');setRandomTranslation('');setShowTranslation(false);const randomIndex=Math.floor(Math.random()*availableSentences.length);setUsedIndices([randomIndex]);const selectedSentence=availableSentences[randomIndex];setRandomSentence(selectedSentence.sentence);setRandomTranslation(selectedSentence.translation);};const handleNextSentence=()=>{getRandomSentence();};return/*#__PURE__*/_jsx(\"div\",{className:startDictation.startDictation,children:message?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsx(\"button\",{onClick:startOver,className:startDictation.startDictation__startOver,children:\"Start over\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[randomSentence&&/*#__PURE__*/_jsx(\"p\",{children:randomSentence}),showTranslation&&/*#__PURE__*/_jsx(\"p\",{className:startDictation.startDictation__translation,children:randomTranslation}),/*#__PURE__*/_jsxs(\"div\",{className:startDictation.startDictation__buttons,children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleShowTranslation,className:startDictation.startDictation__showTranslation,children:\"Show translation\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextSentence,className:startDictation.startDictation__nextSentence,children:\"Next sentence\"})]})]})});};export default StartDictation;","map":{"version":3,"names":["useEffect","useState","startDictation","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","StartDictation","_ref","formData","randomTranslation","setRandomTranslation","randomSentence","setRandomSentence","showTranslation","setShowTranslation","availableSentences","setAvailableSentences","flatMap","word","sentences","usedIndices","setUsedIndices","message","setMessage","getRandomSentence","length","randomIndex","Math","floor","random","includes","prev","selectedSentence","sentence","translation","handleShowTranslation","startOver","handleNextSentence","className","children","onClick","startDictation__startOver","startDictation__translation","startDictation__buttons","startDictation__showTranslation","startDictation__nextSentence"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/Dictation/StartDictation/StartDictation.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport startDictation from './StartDictation.module.css';\r\n\r\nconst StartDictation = ({ formData }) => {\r\n    const [randomTranslation, setRandomTranslation] = useState('');\r\n    const [randomSentence, setRandomSentence] = useState('');\r\n    const [showTranslation, setShowTranslation] = useState(false);\r\n    const [availableSentences, setAvailableSentences] = useState(formData.flatMap(word => word.sentences));\r\n    // const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [usedIndices, setUsedIndices] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const getRandomSentence = () => {\r\n        if (usedIndices.length >= availableSentences.length) {\r\n            setMessage('You checked all the sentences');\r\n            setRandomSentence('');\r\n            setRandomTranslation('');\r\n            return;\r\n        }\r\n\r\n        let randomIndex;\r\n        do {\r\n            randomIndex = Math.floor(Math.random() * availableSentences.length);\r\n        } while (usedIndices.includes(randomIndex));\r\n\r\n        setUsedIndices(prev => [...prev, randomIndex]);\r\n\r\n        const selectedSentence = availableSentences[randomIndex];\r\n        setRandomSentence(selectedSentence.sentence);\r\n        setRandomTranslation(selectedSentence.translation);\r\n        setShowTranslation(false);\r\n        setMessage('');\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRandomSentence();\r\n    }, []); \r\n\r\n    const handleShowTranslation = () => {\r\n        setShowTranslation(true);\r\n    };\r\n\r\n    const startOver = () => {\r\n        setUsedIndices([]); \r\n        setMessage(''); \r\n        setRandomSentence(''); \r\n        setRandomTranslation(''); \r\n        setShowTranslation(false); \r\n\r\n        const randomIndex = Math.floor(Math.random() * availableSentences.length);\r\n        setUsedIndices([randomIndex]); \r\n        const selectedSentence = availableSentences[randomIndex];\r\n        setRandomSentence(selectedSentence.sentence);\r\n        setRandomTranslation(selectedSentence.translation);\r\n    };\r\n\r\n    const handleNextSentence = () => {\r\n        getRandomSentence();\r\n    };\r\n\r\n    return (\r\n        <div className={startDictation.startDictation}>\r\n            {message ? (\r\n                <>\r\n                    <p>{message}</p>\r\n                    <button\r\n                        onClick={startOver}\r\n                        className={startDictation.startDictation__startOver}\r\n                    >\r\n                        Start over\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {randomSentence && <p>{randomSentence}</p>}\r\n                    {showTranslation && (\r\n                        <p className={startDictation.startDictation__translation}>\r\n                            {randomTranslation}\r\n                        </p>\r\n                    )}\r\n                    <div className={startDictation.startDictation__buttons}>\r\n                        <button\r\n                            onClick={handleShowTranslation}\r\n                            className={startDictation.startDictation__showTranslation}\r\n                        >\r\n                            Show translation\r\n                        </button>\r\n                        <button\r\n                            onClick={handleNextSentence}\r\n                            className={startDictation.startDictation__nextSentence}\r\n                        >\r\n                            Next sentence\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartDictation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}