{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\EditPopup\\\\EditPopup.jsx\";\nimport editPopup from './EditPopup.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  formData,\n  handleInput,\n  blurHandler\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: editPopup.editPopup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: editPopup.editPopup__wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: editPopup.editPopup__content,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: editPopup.editPopup__content_close,\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: close,\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 8,\n            columnNumber: 94\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__inputs,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleInput,\n            onBlur: blurHandler,\n            name: \"word\",\n            type: \"text\",\n            placeholder: \"word\",\n            value: formData.word[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 25\n          }, this), dirtyFields.word && errors.word && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red',\n              fontSize: '12px'\n            },\n            children: errors.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this), formData.sentences.map((sentence, index) => {\n            var _dirtyFields$sentence, _errors$sentences$ind, _dirtyFields$sentence2, _errors$sentences$ind2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: editPopup.editPopup__inputs_repeated,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: handleInput,\n                  onBlur: blurHandler,\n                  name: `sentence-${index}`,\n                  type: \"text\",\n                  placeholder: \"sentence with word\",\n                  value: sentence.sentence,\n                  \"data-index\": index\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 37\n                }, this), ((_dirtyFields$sentence = dirtyFields.sentences[index]) === null || _dirtyFields$sentence === void 0 ? void 0 : _dirtyFields$sentence.sentence) && ((_errors$sentences$ind = errors.sentences[index]) === null || _errors$sentences$ind === void 0 ? void 0 : _errors$sentences$ind.sentence) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: 'red',\n                    fontSize: '12px'\n                  },\n                  children: errors.sentences[index].sentence\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: handleInput,\n                  onBlur: blurHandler,\n                  name: `translation-${index}`,\n                  type: \"text\",\n                  placeholder: \"sentence translation\",\n                  value: sentence.translation,\n                  \"data-index\": index\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 37\n                }, this), ((_dirtyFields$sentence2 = dirtyFields.sentences[index]) === null || _dirtyFields$sentence2 === void 0 ? void 0 : _dirtyFields$sentence2.translation) && ((_errors$sentences$ind2 = errors.sentences[index]) === null || _errors$sentences$ind2 === void 0 ? void 0 : _errors$sentences$ind2.translation) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: 'red',\n                    fontSize: '12px'\n                  },\n                  children: errors.sentences[index].translation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 33\n              }, this), formData.sentences.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  cursor: 'pointer',\n                  marginLeft: '10px'\n                },\n                onClick: () => removeField(index),\n                children: \"\\u2013\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: mywordspopup.mywordspopup__buttons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addField,\n            children: \"add one more sentence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePublish,\n            disabled: !formValid,\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["editPopup","jsxDEV","_jsxDEV","EditPopup","formData","handleInput","blurHandler","className","children","editPopup__wrapper","editPopup__content","editPopup__content_close","onClick","onClose","src","close","alt","fileName","_jsxFileName","lineNumber","columnNumber","editPopup__inputs","onChange","onBlur","name","type","placeholder","value","word","index","dirtyFields","errors","style","color","fontSize","sentences","map","sentence","_dirtyFields$sentence","_errors$sentences$ind","_dirtyFields$sentence2","_errors$sentences$ind2","display","editPopup__inputs_repeated","translation","length","cursor","marginLeft","removeField","mywordspopup","mywordspopup__buttons","addField","handlePublish","disabled","formValid","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/EditPopup/EditPopup.jsx"],"sourcesContent":["import editPopup from './EditPopup.module.css'\r\n\r\nconst EditPopup = ({formData, handleInput, blurHandler}) => {\r\n    return(\r\n        <div className={editPopup.editPopup}>\r\n            <div className={editPopup.editPopup__wrapper}>\r\n                <div className={editPopup.editPopup__content}>\r\n                    <button className={editPopup.editPopup__content_close} onClick={onClose}><img src={close} alt='Close' /></button>\r\n                    <div className={editPopup.editPopup__inputs}>\r\n                        <input\r\n                            onChange={handleInput}\r\n                            onBlur={blurHandler}\r\n                            name='word'\r\n                            type='text'\r\n                            placeholder='word'\r\n                            value={formData.word[index]}\r\n                        />\r\n                        {dirtyFields.word && errors.word && (\r\n                            <div style={{ color: 'red', fontSize: '12px' }}>{errors.word}</div>\r\n                        )}\r\n                        {formData.sentences.map((sentence, index) => (\r\n                            <div key={index} style={{ display: 'flex' }}>\r\n                                <div className={editPopup.editPopup__inputs_repeated}>\r\n                                    <input\r\n                                        onChange={handleInput}\r\n                                        onBlur={blurHandler}\r\n                                        name={`sentence-${index}`}\r\n                                        type='text'\r\n                                        placeholder='sentence with word'\r\n                                        value={sentence.sentence}\r\n                                        data-index={index}\r\n                                    />\r\n                                    {dirtyFields.sentences[index]?.sentence && errors.sentences[index]?.sentence && (\r\n                                        <div style={{ color: 'red', fontSize: '12px' }}>{errors.sentences[index].sentence}</div>\r\n                                    )}\r\n                                    <input\r\n                                        onChange={handleInput}\r\n                                        onBlur={blurHandler}\r\n                                        name={`translation-${index}`}\r\n                                        type='text'\r\n                                        placeholder='sentence translation'\r\n                                        value={sentence.translation}\r\n                                        data-index={index}\r\n                                    />\r\n                                    {dirtyFields.sentences[index]?.translation && errors.sentences[index]?.translation && (\r\n                                        <div style={{ color: 'red', fontSize: '12px' }}>{errors.sentences[index].translation}</div>\r\n                                    )}\r\n                                </div>\r\n                                {formData.sentences.length > 1 && (\r\n                                    <span style={{ cursor: 'pointer', marginLeft: '10px' }} onClick={() => removeField(index)}>–</span>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={mywordspopup.mywordspopup__buttons}>\r\n                        <button onClick={addField}>add one more sentence</button>\r\n                        <button onClick={handlePublish} disabled={!formValid}>done</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPopup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}