{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWordsPopup\\\\MyWordsPopup.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport mywordspopup from './MyWordsPopup.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyWordsPopup = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    word: '',\n    sentences: [{\n      sentence: '',\n      translation: ''\n    }]\n  });\n  const [fieldEmpty, setFieldEmpty] = useState(\"Field can't be empty\");\n  useEffect(() => {\n    console.log(formData);\n  }, [formData]);\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      type\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData\n    }));\n  }\n\n  // function handleInput(event) {\n  //     event.preventDefault();\n  //     if (formData.word === '') {\n  //         setFieldEmpty(\"Field can't be empty\")\n  //     } else (\n  //         setFieldEmpty('')\n  //     )\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mywordspopup.mywordspopup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mywordspopup.mywordspopup__wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: mywordspopup.mywordspopup__content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: mywordspopup.mywordspopup__inputs,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            value: formData.word,\n            type: \"text\",\n            placeholder: \"word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            type: \"text\",\n            placeholder: \"sentence with word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            type: \"text\",\n            placeholder: \"sentence translation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: mywordspopup.mywordspopup__buttons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"add one more sentence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(MyWordsPopup, \"WDBGTfHp/YuP5KeMAjU64XxuWTE=\");\n_c = MyWordsPopup;\nexport default MyWordsPopup;\nvar _c;\n$RefreshReg$(_c, \"MyWordsPopup\");","map":{"version":3,"names":["useEffect","useState","mywordspopup","jsxDEV","_jsxDEV","MyWordsPopup","_s","formData","setFormData","word","sentences","sentence","translation","fieldEmpty","setFieldEmpty","console","log","handleChange","event","name","value","type","target","prevFormData","className","children","mywordspopup__wrapper","mywordspopup__content","mywordspopup__inputs","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","mywordspopup__buttons","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/french-app/src/components/Content/MyWords/MyWordsPopup/MyWordsPopup.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport mywordspopup from './MyWordsPopup.module.css'\r\n\r\nconst MyWordsPopup = () => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        word: '',\r\n        sentences: [\r\n            {\r\n                sentence: '',\r\n                translation: ''\r\n            }\r\n        ]\r\n    })\r\n\r\n    const [fieldEmpty, setFieldEmpty] = useState(\"Field can't be empty\");\r\n\r\n    useEffect(() => {\r\n        console.log(formData)\r\n    }, [formData])\r\n\r\n    function handleChange(event) {\r\n        const {name, value, type} = event.target;\r\n        setFormData((prevFormData) => ({\r\n            ...prevFormData,\r\n        }))\r\n    }\r\n\r\n    // function handleInput(event) {\r\n    //     event.preventDefault();\r\n    //     if (formData.word === '') {\r\n    //         setFieldEmpty(\"Field can't be empty\")\r\n    //     } else (\r\n    //         setFieldEmpty('')\r\n    //     )\r\n    // }\r\n\r\n    return(\r\n        <div className={mywordspopup.mywordspopup}>\r\n            <div className={mywordspopup.mywordspopup__wrapper}>\r\n                <div className={mywordspopup.mywordspopup__content}>\r\n                    {/* <form onSubmit={handleInput}> */}\r\n                        <div className={mywordspopup.mywordspopup__inputs}>\r\n                            <input onChange={handleChange} value={formData.word} type='text' placeholder='word'></input>\r\n                            <input onChange={handleChange} type='text' placeholder='sentence with word'></input>\r\n                            <input onChange={handleChange} type='text' placeholder='sentence translation'></input>\r\n                        </div>\r\n                        <div className={mywordspopup.mywordspopup__buttons}>\r\n                            <button>add one more sentence</button>\r\n                            <button>done</button>\r\n                        </div>\r\n                    {/* </form> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyWordsPopup;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACrCQ,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,CACP;MACIC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,sBAAsB,CAAC;EAEpED,SAAS,CAAC,MAAM;IACZe,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;EACzB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,SAASU,YAAYA,CAACC,KAAK,EAAE;IACzB,MAAM;MAACC,IAAI;MAAEC,KAAK;MAAEC;IAAI,CAAC,GAAGH,KAAK,CAACI,MAAM;IACxCd,WAAW,CAAEe,YAAY,KAAM;MAC3B,GAAGA;IACP,CAAC,CAAC,CAAC;EACP;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACInB,OAAA;IAAKoB,SAAS,EAAEtB,YAAY,CAACA,YAAa;IAAAuB,QAAA,eACtCrB,OAAA;MAAKoB,SAAS,EAAEtB,YAAY,CAACwB,qBAAsB;MAAAD,QAAA,eAC/CrB,OAAA;QAAKoB,SAAS,EAAEtB,YAAY,CAACyB,qBAAsB;QAAAF,QAAA,gBAE3CrB,OAAA;UAAKoB,SAAS,EAAEtB,YAAY,CAAC0B,oBAAqB;UAAAH,QAAA,gBAC9CrB,OAAA;YAAOyB,QAAQ,EAAEZ,YAAa;YAACG,KAAK,EAAEb,QAAQ,CAACE,IAAK;YAACY,IAAI,EAAC,MAAM;YAACS,WAAW,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5F9B,OAAA;YAAOyB,QAAQ,EAAEZ,YAAa;YAACI,IAAI,EAAC,MAAM;YAACS,WAAW,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpF9B,OAAA;YAAOyB,QAAQ,EAAEZ,YAAa;YAACI,IAAI,EAAC,MAAM;YAACS,WAAW,EAAC;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrF,CAAC,eACN9B,OAAA;UAAKoB,SAAS,EAAEtB,YAAY,CAACiC,qBAAsB;UAAAV,QAAA,gBAC/CrB,OAAA;YAAAqB,QAAA,EAAQ;UAAqB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtC9B,OAAA;YAAAqB,QAAA,EAAQ;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAA5B,EAAA,CArDKD,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAuDlB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}