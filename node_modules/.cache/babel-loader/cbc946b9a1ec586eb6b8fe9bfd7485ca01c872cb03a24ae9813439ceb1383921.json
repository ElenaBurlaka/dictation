{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\Dictation\\\\Dictation.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport dictation from './Dictation.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dictation = ({\n  formData\n}) => {\n  _s();\n  const [randomWord, setRandomWord] = useState('');\n  const getRandomTranslation = (sentence, index) => {\n    if (formData.sentences && formData.sentences.length > 0) {\n      const randomIndex = Math.floor(Math.random() * formData.sentences.length);\n      setRandomWord(formData.sentences.translaion);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: dictation.dictation,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRandomTranslation,\n      children: \"Start dication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), randomWord && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: randomWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Dictation, \"UkF74YcEB1WYqrmLy7yFclsJzBM=\");\n_c = Dictation;\nexport default Dictation;\nvar _c;\n$RefreshReg$(_c, \"Dictation\");","map":{"version":3,"names":["useState","dictation","jsxDEV","_jsxDEV","Dictation","formData","_s","randomWord","setRandomWord","getRandomTranslation","sentence","index","sentences","length","randomIndex","Math","floor","random","translaion","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/Dictation/Dictation.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport dictation from './Dictation.module.css'\r\n\r\nconst Dictation = ({formData}) => {\r\n\r\nconst [randomWord, setRandomWord] = useState('')\r\n\r\nconst getRandomTranslation = (sentence, index) => {\r\n    if (formData.sentences && formData.sentences.length > 0) {\r\n        const randomIndex = Math.floor(Math.random() * formData.sentences.length);\r\n        setRandomWord(formData.sentences.translaion)\r\n    }\r\n}\r\n\r\n    return(\r\n        <div className={dictation.dictation}>\r\n            <button onClick={getRandomTranslation}>Start dication</button>\r\n            {randomWord && <p>{randomWord}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dictation;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAElC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,oBAAoB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;IAC9C,IAAIN,QAAQ,CAACO,SAAS,IAAIP,QAAQ,CAACO,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;MACrD,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,QAAQ,CAACO,SAAS,CAACC,MAAM,CAAC;MACzEL,aAAa,CAACH,QAAQ,CAACO,SAAS,CAACM,UAAU,CAAC;IAChD;EACJ,CAAC;EAEG,oBACIf,OAAA;IAAKgB,SAAS,EAAElB,SAAS,CAACA,SAAU;IAAAmB,QAAA,gBAChCjB,OAAA;MAAQkB,OAAO,EAAEZ,oBAAqB;MAAAW,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7DlB,UAAU,iBAAIJ,OAAA;MAAAiB,QAAA,EAAIb;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEd,CAAC;AAAAnB,EAAA,CAjBKF,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAmBf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}