{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWords.jsx\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from 'react';\n// import mywords from './MyWords.module.css';\n// import MyWordsPopup from './MyWordsPopup/MyWordsPopup';\n// import Search from './Search/Search';\n// import edit from './../../../images/edit.png'\n// import close from './../../../images/close.png'\n// import DeletePopup from './DeletePopup/DeletePopup';\n// import EditPopup from './MyWordsPopup/EditPopup/EditPopup';\n\n// const MyWords = () => {\n//     const [showPopup, setShowPopup] = useState(false);\n//     const [data, setData] = useState([]);\n//     const [filteredData, setFilteredData] = useState([]);\n//     const [showDeletePopup, setShowDeletePopup] = useState(false)\n//     const [showEditPopup, setShowEditPopup] = useState(false)\n//     const [deleteIndex, setDeleteIndex] = useState(null);\n//     const [editIndex, setEditIndex] = useState(null)\n\n//     useEffect(() => {\n//         const savedData = localStorage.getItem('wordsData');\n//         if (savedData) {\n//             const parsedData = JSON.parse(savedData)\n//             setData(parsedData)\n//             setFilteredData(parsedData)\n//         }\n//     }, [])\n\n//     const addWord = (wordData) => {\n//         const updatedData = [...data, wordData]\n//         setData(updatedData);\n//         setFilteredData(updatedData)\n//         localStorage.setItem('wordsData', JSON.stringify(updatedData))\n\n//         setShowPopup(false); // Закрыть попап после добавления слова\n//     };\n\n//     const handleSearch = (filteredWords) => {\n//         setFilteredData(filteredWords)\n//     }\n\n//     const handleDelete = (index) => {\n//         const updatedData = data.filter((_, i) => i !== index);\n//         setData(updatedData)\n//         setFilteredData(updatedData)\n//         localStorage.setItem('wordsData', JSON.stringify(updatedData));\n//         setShowDeletePopup(false)\n//     }\n\n//     return (\n//         <div className={mywords.mywords}>\n//             <div className={mywords.mywords__wrapper}>\n//                 <div className={mywords.mywords__wrapper_header}>\n//                     <h1>My words</h1>\n//                     <p>(you have {data.length < 2 ? `${data.length} word` : `${data.length} words`})</p>\n//                     <Search formData={data} onSearch={handleSearch} />\n//                 </div>\n//                 <div className={mywords.mywords__wrapper_content}>\n//                     {filteredData.map((item, index) => (\n//                         <div key={index}>\n//                             <div className={mywords.mywords__word}>\n//                                 <p>{item.word}</p>\n//                                 <div className={mywords.mywords__icons}>\n//                                     <img className={mywords.mywords__icons_edit} onClick={() => {setShowEditPopup(true); setEditIndex(index); }} src={edit} alt='Edit'></img>\n//                                     {showEditPopup && editIndex === index && (\n//                                     <EditPopup onClose={() => setShowEditPopup(false)} index={index} />)}\n//                                     <img className={mywords.mywords__icons_close} onClick={() => {setShowDeletePopup(true); setDeleteIndex(index); }} src={close} alt='Close'></img>\n//                                     {showDeletePopup && deleteIndex === index && (\n//                                     <DeletePopup onClose={() => setShowDeletePopup(false)} index={index} onDelete={handleDelete} />)}\n//                                 </div>\n//                             </div>\n//                             <ul>\n//                                 {item.sentences.map((sentence, i) => (\n//                                     <li key={i}>{sentence.sentence} - {sentence.translation}</li>\n//                                 ))}\n//                             </ul>\n//                         </div>\n//                     ))}\n//                 </div>\n//             </div>\n//             <div className={mywords.mywords__button}>\n//                 <button className={mywords.mywords__button_button} onClick={() => setShowPopup(true)}>Add a word</button>\n//                 {showPopup && <MyWordsPopup onClose={() => setShowPopup(false)} addWord={addWord} filteredWords={data}/>}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default MyWords;\n\nimport { useState, useEffect } from 'react';\nimport mywords from './MyWords.module.css';\nimport MyWordsPopup from './MyWordsPopup/MyWordsPopup';\nimport Search from './Search/Search';\nimport edit from './../../../images/edit.png';\nimport close from './../../../images/close.png';\nimport DeletePopup from './DeletePopup/DeletePopup';\nimport EditPopup from './MyWordsPopup/EditPopup/EditPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyWords = () => {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [showDeletePopup, setShowDeletePopup] = useState(false);\n  const [showEditPopup, setShowEditPopup] = useState(false);\n  const [deleteIndex, setDeleteIndex] = useState(null);\n  const [editIndex, setEditIndex] = useState(null);\n  useEffect(() => {\n    const savedData = localStorage.getItem('wordsData');\n    if (savedData) {\n      const parsedData = JSON.parse(savedData);\n      setData(parsedData);\n      setFilteredData(parsedData);\n    }\n  }, []);\n  const addWord = wordData => {\n    const updatedData = [...data, wordData];\n    setData(updatedData);\n    setFilteredData(updatedData);\n    localStorage.setItem('wordsData', JSON.stringify(updatedData));\n    setShowPopup(false);\n  };\n  const handleSearch = filteredWords => {\n    setFilteredData(filteredWords);\n  };\n  const handleDelete = index => {\n    const updatedData = data.filter((_, i) => i !== index);\n    setData(updatedData);\n    setFilteredData(updatedData);\n    localStorage.setItem('wordsData', JSON.stringify(updatedData));\n    setShowDeletePopup(false);\n  };\n  const handleInput = (e, index, field) => {\n    const {\n      value\n    } = e.target;\n    setData(prevData => {\n      const updatedData = [...prevData];\n      if (field === 'word') {\n        updatedData[index].word = value;\n      } else {\n        const [fieldType, idx] = field.split('-');\n        updatedData[index].sentences[idx][fieldType] = value;\n      }\n      return updatedData;\n    });\n  };\n  const blurHandler = (e, index, field) => {\n    // Обработчик для события blur, если необходимо\n  };\n  const addField = () => {\n    // Добавление нового поля в sentences\n  };\n  const removeField = index => {\n    // Удаление поля из sentences\n  };\n  const handlePublish = () => {\n    // Публикация изменений\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mywords.mywords,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: mywords.mywords__wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: mywords.mywords__wrapper_header,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"(you have \", data.length < 2 ? `${data.length} word` : `${data.length} words`, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          formData: data,\n          onSearch: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: mywords.mywords__wrapper_content,\n        children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: mywords.mywords__word,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: mywords.mywords__icons,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: mywords.mywords__icons_edit,\n                onClick: () => {\n                  setShowEditPopup(true);\n                  setEditIndex(index);\n                },\n                src: edit,\n                alt: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this), showEditPopup && editIndex === index && /*#__PURE__*/_jsxDEV(EditPopup, {\n                onClose: () => setShowEditPopup(false),\n                index: index,\n                formData: data[editIndex] // Передаем правильные данные\n                ,\n                handleInput: handleInput,\n                blurHandler: blurHandler,\n                addField: addField,\n                removeField: removeField,\n                handlePublish: handlePublish\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: mywords.mywords__icons_close,\n                onClick: () => {\n                  setShowDeletePopup(true);\n                  setDeleteIndex(index);\n                },\n                src: close,\n                alt: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), showDeletePopup && deleteIndex === index && /*#__PURE__*/_jsxDEV(DeletePopup, {\n                onClose: () => setShowDeletePopup(false),\n                index: index,\n                onDelete: handleDelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: item.sentences.map((sentence, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [sentence.sentence, \" - \", sentence.translation]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mywords.mywords__button,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: mywords.mywords__button_button,\n        onClick: () => setShowPopup(true),\n        children: \"Add a word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(MyWordsPopup, {\n        onClose: () => setShowPopup(false),\n        addWord: addWord,\n        filteredWords: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n_s(MyWords, \"TS1hg92A08/87Rosca5UUJDkLYg=\");\n_c = MyWords;\nexport default MyWords;\nvar _c;\n$RefreshReg$(_c, \"MyWords\");","map":{"version":3,"names":["useState","useEffect","mywords","MyWordsPopup","Search","edit","close","DeletePopup","EditPopup","jsxDEV","_jsxDEV","MyWords","_s","showPopup","setShowPopup","data","setData","filteredData","setFilteredData","showDeletePopup","setShowDeletePopup","showEditPopup","setShowEditPopup","deleteIndex","setDeleteIndex","editIndex","setEditIndex","savedData","localStorage","getItem","parsedData","JSON","parse","addWord","wordData","updatedData","setItem","stringify","handleSearch","filteredWords","handleDelete","index","filter","_","i","handleInput","e","field","value","target","prevData","word","fieldType","idx","split","sentences","blurHandler","addField","removeField","handlePublish","className","children","mywords__wrapper","mywords__wrapper_header","fileName","_jsxFileName","lineNumber","columnNumber","length","formData","onSearch","mywords__wrapper_content","map","item","mywords__word","mywords__icons","mywords__icons_edit","onClick","src","alt","onClose","mywords__icons_close","onDelete","sentence","translation","mywords__button","mywords__button_button","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/MyWords.jsx"],"sourcesContent":["// import { useState, useEffect } from 'react';\r\n// import mywords from './MyWords.module.css';\r\n// import MyWordsPopup from './MyWordsPopup/MyWordsPopup';\r\n// import Search from './Search/Search';\r\n// import edit from './../../../images/edit.png'\r\n// import close from './../../../images/close.png'\r\n// import DeletePopup from './DeletePopup/DeletePopup';\r\n// import EditPopup from './MyWordsPopup/EditPopup/EditPopup';\r\n\r\n// const MyWords = () => {\r\n//     const [showPopup, setShowPopup] = useState(false);\r\n//     const [data, setData] = useState([]);\r\n//     const [filteredData, setFilteredData] = useState([]);\r\n//     const [showDeletePopup, setShowDeletePopup] = useState(false)\r\n//     const [showEditPopup, setShowEditPopup] = useState(false)\r\n//     const [deleteIndex, setDeleteIndex] = useState(null);\r\n//     const [editIndex, setEditIndex] = useState(null)\r\n\r\n//     useEffect(() => {\r\n//         const savedData = localStorage.getItem('wordsData');\r\n//         if (savedData) {\r\n//             const parsedData = JSON.parse(savedData)\r\n//             setData(parsedData)\r\n//             setFilteredData(parsedData)\r\n//         }\r\n//     }, [])\r\n    \r\n\r\n//     const addWord = (wordData) => {\r\n//         const updatedData = [...data, wordData]\r\n//         setData(updatedData);\r\n//         setFilteredData(updatedData)\r\n//         localStorage.setItem('wordsData', JSON.stringify(updatedData))\r\n\r\n//         setShowPopup(false); // Закрыть попап после добавления слова\r\n//     };\r\n\r\n//     const handleSearch = (filteredWords) => {\r\n//         setFilteredData(filteredWords)\r\n//     }\r\n\r\n//     const handleDelete = (index) => {\r\n//         const updatedData = data.filter((_, i) => i !== index);\r\n//         setData(updatedData)\r\n//         setFilteredData(updatedData)\r\n//         localStorage.setItem('wordsData', JSON.stringify(updatedData));\r\n//         setShowDeletePopup(false)\r\n//     }\r\n\r\n//     return (\r\n//         <div className={mywords.mywords}>\r\n//             <div className={mywords.mywords__wrapper}>\r\n//                 <div className={mywords.mywords__wrapper_header}>\r\n//                     <h1>My words</h1>\r\n//                     <p>(you have {data.length < 2 ? `${data.length} word` : `${data.length} words`})</p>\r\n//                     <Search formData={data} onSearch={handleSearch} />\r\n//                 </div>\r\n//                 <div className={mywords.mywords__wrapper_content}>\r\n//                     {filteredData.map((item, index) => (\r\n//                         <div key={index}>\r\n//                             <div className={mywords.mywords__word}>\r\n//                                 <p>{item.word}</p>\r\n//                                 <div className={mywords.mywords__icons}>\r\n//                                     <img className={mywords.mywords__icons_edit} onClick={() => {setShowEditPopup(true); setEditIndex(index); }} src={edit} alt='Edit'></img>\r\n//                                     {showEditPopup && editIndex === index && (\r\n//                                     <EditPopup onClose={() => setShowEditPopup(false)} index={index} />)}\r\n//                                     <img className={mywords.mywords__icons_close} onClick={() => {setShowDeletePopup(true); setDeleteIndex(index); }} src={close} alt='Close'></img>\r\n//                                     {showDeletePopup && deleteIndex === index && (\r\n//                                     <DeletePopup onClose={() => setShowDeletePopup(false)} index={index} onDelete={handleDelete} />)}\r\n//                                 </div>\r\n//                             </div>\r\n//                             <ul>\r\n//                                 {item.sentences.map((sentence, i) => (\r\n//                                     <li key={i}>{sentence.sentence} - {sentence.translation}</li>\r\n//                                 ))}\r\n//                             </ul>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//             <div className={mywords.mywords__button}>\r\n//                 <button className={mywords.mywords__button_button} onClick={() => setShowPopup(true)}>Add a word</button>\r\n//                 {showPopup && <MyWordsPopup onClose={() => setShowPopup(false)} addWord={addWord} filteredWords={data}/>}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default MyWords;\r\n\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport mywords from './MyWords.module.css';\r\nimport MyWordsPopup from './MyWordsPopup/MyWordsPopup';\r\nimport Search from './Search/Search';\r\nimport edit from './../../../images/edit.png';\r\nimport close from './../../../images/close.png';\r\nimport DeletePopup from './DeletePopup/DeletePopup';\r\nimport EditPopup from './MyWordsPopup/EditPopup/EditPopup';\r\n\r\nconst MyWords = () => {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [showDeletePopup, setShowDeletePopup] = useState(false);\r\n    const [showEditPopup, setShowEditPopup] = useState(false);\r\n    const [deleteIndex, setDeleteIndex] = useState(null);\r\n    const [editIndex, setEditIndex] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const savedData = localStorage.getItem('wordsData');\r\n        if (savedData) {\r\n            const parsedData = JSON.parse(savedData);\r\n            setData(parsedData);\r\n            setFilteredData(parsedData);\r\n        }\r\n    }, []);\r\n\r\n    const addWord = (wordData) => {\r\n        const updatedData = [...data, wordData];\r\n        setData(updatedData);\r\n        setFilteredData(updatedData);\r\n        localStorage.setItem('wordsData', JSON.stringify(updatedData));\r\n        setShowPopup(false);\r\n    };\r\n\r\n    const handleSearch = (filteredWords) => {\r\n        setFilteredData(filteredWords);\r\n    };\r\n\r\n    const handleDelete = (index) => {\r\n        const updatedData = data.filter((_, i) => i !== index);\r\n        setData(updatedData);\r\n        setFilteredData(updatedData);\r\n        localStorage.setItem('wordsData', JSON.stringify(updatedData));\r\n        setShowDeletePopup(false);\r\n    };\r\n\r\n    const handleInput = (e, index, field) => {\r\n        const { value } = e.target;\r\n        setData(prevData => {\r\n            const updatedData = [...prevData];\r\n            if (field === 'word') {\r\n                updatedData[index].word = value;\r\n            } else {\r\n                const [fieldType, idx] = field.split('-');\r\n                updatedData[index].sentences[idx][fieldType] = value;\r\n            }\r\n            return updatedData;\r\n        });\r\n    };\r\n\r\n    const blurHandler = (e, index, field) => {\r\n        // Обработчик для события blur, если необходимо\r\n    };\r\n\r\n    const addField = () => {\r\n        // Добавление нового поля в sentences\r\n    };\r\n\r\n    const removeField = (index) => {\r\n        // Удаление поля из sentences\r\n    };\r\n\r\n    const handlePublish = () => {\r\n        // Публикация изменений\r\n    };\r\n\r\n    return (\r\n        <div className={mywords.mywords}>\r\n            <div className={mywords.mywords__wrapper}>\r\n                <div className={mywords.mywords__wrapper_header}>\r\n                    <h1>My words</h1>\r\n                    <p>(you have {data.length < 2 ? `${data.length} word` : `${data.length} words`})</p>\r\n                    <Search formData={data} onSearch={handleSearch} />\r\n                </div>\r\n                <div className={mywords.mywords__wrapper_content}>\r\n                    {filteredData.map((item, index) => (\r\n                        <div key={index}>\r\n                            <div className={mywords.mywords__word}>\r\n                                <p>{item.word}</p>\r\n                                <div className={mywords.mywords__icons}>\r\n                                    <img className={mywords.mywords__icons_edit} onClick={() => { setShowEditPopup(true); setEditIndex(index); }} src={edit} alt='Edit'></img>\r\n                                    {showEditPopup && editIndex === index && (\r\n                                        <EditPopup\r\n                                            onClose={() => setShowEditPopup(false)}\r\n                                            index={index}\r\n                                            formData={data[editIndex]} // Передаем правильные данные\r\n                                            handleInput={handleInput}\r\n                                            blurHandler={blurHandler}\r\n                                            addField={addField}\r\n                                            removeField={removeField}\r\n                                            handlePublish={handlePublish}\r\n                                        />\r\n                                    )}\r\n                                    <img className={mywords.mywords__icons_close} onClick={() => { setShowDeletePopup(true); setDeleteIndex(index); }} src={close} alt='Close'></img>\r\n                                    {showDeletePopup && deleteIndex === index && (\r\n                                        <DeletePopup onClose={() => setShowDeletePopup(false)} index={index} onDelete={handleDelete} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <ul>\r\n                                {item.sentences.map((sentence, i) => (\r\n                                    <li key={i}>{sentence.sentence} - {sentence.translation}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className={mywords.mywords__button}>\r\n                <button className={mywords.mywords__button_button} onClick={() => setShowPopup(true)}>Add a word</button>\r\n                {showPopup && <MyWordsPopup onClose={() => setShowPopup(false)} addWord={addWord} filteredWords={data} />}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyWords;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}