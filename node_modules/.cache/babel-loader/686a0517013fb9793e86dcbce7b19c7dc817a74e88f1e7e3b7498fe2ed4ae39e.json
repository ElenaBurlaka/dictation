{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\Dictation\\\\Dictation.jsx\";\nimport { useState } from 'react';\nimport dictation from './Dictation.module.css';\nimport { NavLink } from 'react-router-dom';\nimport DictationRoutes from './DictationRoutes/DictationRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dictation = () => {\n  // const [randomTranslation, setRandomTranslation] = useState('')\n\n  // const getRandomTranslation = () => {\n  //     if (formData && formData.length > 0) {\n  //         const allSentences = formData.flatMap(word => word.sentences)\n  //         const randomIndex = Math.floor(Math.random() * allSentences.length);\n  //         setRandomTranslation(allSentences[randomIndex].translation)\n  //     } else {\n  //         console.error('formData is undefined or empty')\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: dictation.dictation,\n    children: [/*#__PURE__*/_jsxDEV(DictationRoutes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/startDictation\",\n      children: \"Start dictation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = Dictation;\nexport default Dictation;\nvar _c;\n$RefreshReg$(_c, \"Dictation\");","map":{"version":3,"names":["useState","dictation","NavLink","DictationRoutes","jsxDEV","_jsxDEV","Dictation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/Dictation/Dictation.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport dictation from './Dictation.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport DictationRoutes from './DictationRoutes/DictationRoutes';\r\n\r\nconst Dictation = () => {\r\n\r\n// const [randomTranslation, setRandomTranslation] = useState('')\r\n\r\n// const getRandomTranslation = () => {\r\n//     if (formData && formData.length > 0) {\r\n//         const allSentences = formData.flatMap(word => word.sentences)\r\n//         const randomIndex = Math.floor(Math.random() * allSentences.length);\r\n//         setRandomTranslation(allSentences[randomIndex].translation)\r\n//     } else {\r\n//         console.error('formData is undefined or empty')\r\n//     }\r\n// }\r\n\r\n    return(\r\n        <div className={dictation.dictation}>\r\n            <DictationRoutes />\r\n            <NavLink to='/startDictation'>Start dictation</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dictation;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,eAAe,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAExB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,oBACID,OAAA;IAAKE,SAAS,EAAEN,SAAS,CAACA,SAAU;IAAAO,QAAA,gBAChCH,OAAA,CAACF,eAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnBP,OAAA,CAACH,OAAO;MAACW,EAAE,EAAC,iBAAiB;MAAAL,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAAAE,EAAA,GApBKR,SAAS;AAsBf,eAAeA,SAAS;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}