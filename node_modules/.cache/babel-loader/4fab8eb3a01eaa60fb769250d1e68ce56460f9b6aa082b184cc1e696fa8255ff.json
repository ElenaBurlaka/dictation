{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWordsPopup\\\\EditPopup\\\\EditPopup.jsx\",\n  _s = $RefreshSig$();\nimport editPopup from './EditPopup.module.css';\nimport close from './../../../../../images/close.png';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  formData,\n  onClose,\n  addField,\n  removeField,\n  handlePublish,\n  index\n}) => {\n  _s();\n  const [sentenceDirty, setSentenceDirty] = useState(false);\n  const [translationdDirty, setTranslationDirty] = useState(false);\n  const [localFormData, setLocalFormData] = useState({\n    ...formData\n  });\n  if (!formData || typeof formData.word === 'undefined' || !formData.sentences) {\n    return null;\n  }\n  const handleLocalInput = (e, index, field) => {\n    const {\n      value\n    } = e.target;\n    setLocalFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      if (field === 'word') {\n        updatedData.word = value;\n      } else {\n        const [fieldType, idx] = field.split('-');\n        updatedData.sentences[idx][fieldType] = value;\n      }\n      return updatedData;\n    });\n  };\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'sentence':\n        setSentenceDirty(true);\n        break;\n      case 'tanslation':\n        setTranslationDirty(true);\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: editPopup.editPopup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: editPopup.editPopup__wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: editPopup.editPopup__content,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: editPopup.editPopup__content_close,\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: close,\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__inputs,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => handleLocalInput(e, index, 'word'),\n            onBlur: e => blurHandler(e, index, 'word'),\n            type: \"text\",\n            placeholder: \"word\",\n            value: formData.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), formData.sentences.map((sentence, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: editPopup.editPopup__inputs_repeated,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleLocalInput(e, index, `sentence-${i}`),\n                onBlur: e => blurHandler(e, index, `sentence-${i}`),\n                name: `sentence-${i}`,\n                type: \"text\",\n                placeholder: \"sentence with word\",\n                value: sentence.sentence,\n                \"data-index\": i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleLocalInput(e, index, `translation-${i}`),\n                onBlur: e => blurHandler(e, index, `translation-${i}`),\n                name: `translation-${i}`,\n                type: \"text\",\n                placeholder: \"sentence translation\",\n                value: sentence.translation,\n                \"data-index\": i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), localFormData.sentences.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                cursor: 'pointer',\n                marginLeft: '10px'\n              },\n              onClick: () => removeField(i),\n              children: \"\\u2013\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__buttons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addField,\n            children: \"add one more sentence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePublish(index),\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPopup, \"BLRlWSr3BLgiesEo1lMYKz0lKdc=\");\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["editPopup","close","useState","jsxDEV","_jsxDEV","EditPopup","formData","onClose","addField","removeField","handlePublish","index","_s","sentenceDirty","setSentenceDirty","translationdDirty","setTranslationDirty","localFormData","setLocalFormData","word","sentences","handleLocalInput","e","field","value","target","prevData","updatedData","fieldType","idx","split","blurHandler","name","className","children","editPopup__wrapper","editPopup__content","editPopup__content_close","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","editPopup__inputs","onChange","onBlur","type","placeholder","map","sentence","i","style","display","editPopup__inputs_repeated","translation","length","cursor","marginLeft","editPopup__buttons","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/MyWordsPopup/EditPopup/EditPopup.jsx"],"sourcesContent":["import editPopup from './EditPopup.module.css';\r\nimport close from './../../../../../images/close.png';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst EditPopup = ({ formData, onClose, addField, removeField, handlePublish, index }) => {\r\n\r\n    const [sentenceDirty, setSentenceDirty] = useState(false)\r\n    const [translationdDirty, setTranslationDirty] = useState(false)\r\n    const [localFormData, setLocalFormData] = useState({...formData});\r\n\r\n    if (!formData || typeof formData.word === 'undefined' || !formData.sentences) {\r\n        return null;\r\n    }\r\n\r\n    const handleLocalInput = (e, index, field) => {\r\n        const { value } = e.target;\r\n        setLocalFormData(prevData => {\r\n            const updatedData = { ...prevData };\r\n            if (field === 'word') {\r\n                updatedData.word = value;\r\n            } else {\r\n                const [fieldType, idx] = field.split('-');\r\n                updatedData.sentences[idx][fieldType] = value;\r\n            }\r\n            return updatedData;\r\n        });\r\n    };\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name) {\r\n            case 'sentence':\r\n                setSentenceDirty(true)\r\n                break\r\n            case 'tanslation':\r\n                setTranslationDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={editPopup.editPopup}>\r\n            <div className={editPopup.editPopup__wrapper}>\r\n                <div className={editPopup.editPopup__content}>\r\n                    <button className={editPopup.editPopup__content_close} onClick={onClose}>\r\n                        <img src={close} alt='Close' />\r\n                    </button>\r\n                    <div className={editPopup.editPopup__inputs}>\r\n                        <input\r\n                            onChange={(e) => handleLocalInput(e, index, 'word')}\r\n                            onBlur={(e) => blurHandler(e, index, 'word')}\r\n                            type='text'\r\n                            placeholder='word'\r\n                            value={formData.word}\r\n                        />\r\n                        {formData.sentences.map((sentence, i) => (\r\n                            <div key={i} style={{ display: 'flex' }}>\r\n                                <div className={editPopup.editPopup__inputs_repeated}>\r\n                                    <input\r\n                                        onChange={(e) => handleLocalInput(e, index, `sentence-${i}`)}\r\n                                        onBlur={(e) => blurHandler(e, index, `sentence-${i}`)}\r\n                                        name={`sentence-${i}`}\r\n                                        type='text'\r\n                                        placeholder='sentence with word'\r\n                                        value={sentence.sentence}\r\n                                        data-index={i}\r\n                                    />\r\n                                    <input\r\n                                        onChange={(e) => handleLocalInput(e, index, `translation-${i}`)}\r\n                                        onBlur={(e) => blurHandler(e, index, `translation-${i}`)}\r\n                                        name={`translation-${i}`}\r\n                                        type='text'\r\n                                        placeholder='sentence translation'\r\n                                        value={sentence.translation}\r\n                                        data-index={i}\r\n                                    />\r\n                                </div>\r\n                                {localFormData.sentences.length > 1 && (\r\n                                    <span style={{ cursor: 'pointer', marginLeft: '10px' }} onClick={() => removeField(i)}>–</span>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={editPopup.editPopup__buttons}>\r\n                        <button onClick={addField}>add one more sentence</button>\r\n                        <button onClick={() => handlePublish(index)}>done</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}