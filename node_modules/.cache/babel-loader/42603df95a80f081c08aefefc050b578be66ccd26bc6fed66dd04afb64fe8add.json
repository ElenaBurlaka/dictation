{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWords.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport mywords from './MyWords.module.css';\nimport MyWordsPopup from './MyWordsPopup/MyWordsPopup';\nimport Search from './Search/Search';\nimport edit from './../../../images/edit.png';\nimport close from './../../../images/close.png';\nimport DeletePopup from './DeletePopup/DeletePopup';\nimport EditPopup from './MyWordsPopup/EditPopup/EditPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyWords = ({\n  blurHandler\n}) => {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [showDeletePopup, setShowDeletePopup] = useState(false);\n  const [showEditPopup, setShowEditPopup] = useState(false);\n  const [deleteIndex, setDeleteIndex] = useState(null);\n  const [editIndex, setEditIndex] = useState(null);\n  useEffect(() => {\n    const savedData = localStorage.getItem('wordsData');\n    if (savedData) {\n      const parsedData = JSON.parse(savedData);\n      setData(parsedData);\n      setFilteredData(parsedData);\n    }\n  }, []);\n  const addWord = wordData => {\n    const updatedData = [...data, wordData];\n    setData(updatedData);\n    setFilteredData(updatedData);\n    localStorage.setItem('wordsData', JSON.stringify(updatedData));\n    setShowPopup(false);\n  };\n  const handleSearch = filteredWords => {\n    setFilteredData(filteredWords);\n  };\n  const handleDelete = index => {\n    if (deleteIndex !== null) {\n      const updatedData = data.filter((_, i) => i !== deleteIndex);\n      setData(updatedData);\n      setFilteredData(updatedData);\n      localStorage.setItem('wordsData', JSON.stringify(updatedData));\n      setShowDeletePopup(false);\n    }\n  };\n  const handleInput = (e, index, field) => {\n    const {\n      value\n    } = e.target;\n    setData(prevData => {\n      const updatedData = [...prevData];\n      if (field === 'word') {\n        updatedData[index].word = value;\n      } else {\n        const [fieldType, idx] = field.split('-');\n        updatedData[index].sentences[idx][fieldType] = value;\n      }\n      return updatedData;\n    });\n  };\n  const updateWordData = (updatedWord, index) => {\n    const updatedData = data.map((word, i) => i === index ? updatedWord : word);\n    setData(prevData => {\n      const newData = [...prevData];\n      newData[index] = updatedWord;\n      localStorage.setItem('wordsData', JSON.stringify(newData));\n      return newData;\n    });\n  };\n\n  // const blurHandler = (e, index, field) => {\n  // Обработчик для события blur, если необходимо\n  // };\n\n  // const addField = (wordIndex) => {\n  //     setData(prevData => {\n  //         const updatedData = [...prevData];\n  //         updatedData[wordIndex].sentences.push({ sentence: '', translation: '' });\n  //         return updatedData;\n  //     });\n  // };\n\n  const addField = () => {\n    const newSentence = {\n      sentence: '',\n      translation: ''\n    };\n    const newSentences = [...formData.sentences, newSentence];\n    handleInput({\n      target: {\n        value: newSentences\n      }\n    }, index, 'sentences');\n  };\n\n  // const addField = () => {\n  //     setFormData(prevFormData => ({\n  //         ...prevFormData,\n  //         sentences: [...prevFormData.sentences, { sentence: '', translation: '' }]\n  //     }));\n  //     setErrors(prevErrors => ({\n  //         ...prevErrors,\n  //         sentences: [...prevErrors.sentences, { sentence: \"Field can't be empty\", translation: \"Field can't be empty\" }]\n  //     }));\n  //     setDirtyFields(prevDirtyFields => ({\n  //         ...prevDirtyFields,\n  //         sentences: [...prevDirtyFields.sentences, { sentence: false, translation: false }]\n  //     }));\n  // };\n\n  const removeField = (wordIndex, sentenceIndex) => {\n    setData(prevData => {\n      const updatedData = [...prevData];\n      if (updatedData[wordIndex] && updatedData[wordIndex].sentences) {\n        updatedData[wordIndex].sentences = updatedData[wordIndex].sentences.filter((_, i) => i !== sentenceIndex);\n      }\n      return updatedData;\n    });\n  };\n  const handlePublish = (index, updatedWord) => {\n    updateWordData(updatedWord, index);\n    setShowEditPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mywords.mywords,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: mywords.mywords__wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: mywords.mywords__wrapper_header,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"(you have \", data.length < 2 ? `${data.length} word` : `${data.length} words`, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          formData: data,\n          onSearch: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: mywords.mywords__wrapper_content,\n        children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: mywords.mywords__word,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: mywords.mywords__icons,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: mywords.mywords__icons_edit,\n                onClick: () => {\n                  setShowEditPopup(true);\n                  setEditIndex(index);\n                },\n                src: edit,\n                alt: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this), showEditPopup && editIndex === index && /*#__PURE__*/_jsxDEV(EditPopup, {\n                onClose: () => setShowEditPopup(false),\n                index: index,\n                formData: data[editIndex] // Передаем правильные данные\n                ,\n                handleInput: handleInput,\n                blurHandler: blurHandler,\n                addField: () => addField(editIndex),\n                removeField: idx => removeField(editIndex, idx),\n                handlePublish: handlePublish\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: mywords.mywords__icons_close,\n                onClick: () => {\n                  setShowDeletePopup(true);\n                  setDeleteIndex(index);\n                },\n                src: close,\n                alt: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this), showDeletePopup && deleteIndex === index && /*#__PURE__*/_jsxDEV(DeletePopup, {\n                onClose: () => setShowDeletePopup(false),\n                index: index,\n                onDelete: handleDelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: item.sentences.map((sentence, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [sentence.sentence, \" - \", sentence.translation]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mywords.mywords__button,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: mywords.mywords__button_button,\n        onClick: () => setShowPopup(true),\n        children: \"Add a word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(MyWordsPopup, {\n        onClose: () => setShowPopup(false),\n        addWord: addWord,\n        filteredWords: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(MyWords, \"TS1hg92A08/87Rosca5UUJDkLYg=\");\n_c = MyWords;\nexport default MyWords;\nvar _c;\n$RefreshReg$(_c, \"MyWords\");","map":{"version":3,"names":["useState","useEffect","mywords","MyWordsPopup","Search","edit","close","DeletePopup","EditPopup","jsxDEV","_jsxDEV","MyWords","blurHandler","_s","showPopup","setShowPopup","data","setData","filteredData","setFilteredData","showDeletePopup","setShowDeletePopup","showEditPopup","setShowEditPopup","deleteIndex","setDeleteIndex","editIndex","setEditIndex","savedData","localStorage","getItem","parsedData","JSON","parse","addWord","wordData","updatedData","setItem","stringify","handleSearch","filteredWords","handleDelete","index","filter","_","i","handleInput","e","field","value","target","prevData","word","fieldType","idx","split","sentences","updateWordData","updatedWord","map","newData","addField","newSentence","sentence","translation","newSentences","formData","removeField","wordIndex","sentenceIndex","handlePublish","className","children","mywords__wrapper","mywords__wrapper_header","fileName","_jsxFileName","lineNumber","columnNumber","length","onSearch","mywords__wrapper_content","item","mywords__word","mywords__icons","mywords__icons_edit","onClick","src","alt","onClose","mywords__icons_close","onDelete","mywords__button","mywords__button_button","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/MyWords.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport mywords from './MyWords.module.css';\r\nimport MyWordsPopup from './MyWordsPopup/MyWordsPopup';\r\nimport Search from './Search/Search';\r\nimport edit from './../../../images/edit.png';\r\nimport close from './../../../images/close.png';\r\nimport DeletePopup from './DeletePopup/DeletePopup';\r\nimport EditPopup from './MyWordsPopup/EditPopup/EditPopup';\r\n\r\nconst MyWords = ({blurHandler}) => {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [showDeletePopup, setShowDeletePopup] = useState(false);\r\n    const [showEditPopup, setShowEditPopup] = useState(false);\r\n    const [deleteIndex, setDeleteIndex] = useState(null);\r\n    const [editIndex, setEditIndex] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const savedData = localStorage.getItem('wordsData');\r\n        if (savedData) {\r\n            const parsedData = JSON.parse(savedData);\r\n            setData(parsedData);\r\n            setFilteredData(parsedData);\r\n        }\r\n    }, []);\r\n\r\n    const addWord = (wordData) => {\r\n        const updatedData = [...data, wordData];\r\n        setData(updatedData);\r\n        setFilteredData(updatedData);\r\n        localStorage.setItem('wordsData', JSON.stringify(updatedData));\r\n        setShowPopup(false);\r\n    };\r\n\r\n    const handleSearch = (filteredWords) => {\r\n        setFilteredData(filteredWords);\r\n    };\r\n\r\n    const handleDelete = (index) => {\r\n        if (deleteIndex !== null) {\r\n            const updatedData = data.filter((_, i) => i !== deleteIndex);\r\n            setData(updatedData);\r\n            setFilteredData(updatedData);\r\n            localStorage.setItem('wordsData', JSON.stringify(updatedData));\r\n            setShowDeletePopup(false);\r\n        }\r\n    };\r\n\r\n    const handleInput = (e, index, field) => {\r\n        const { value } = e.target;\r\n        setData(prevData => {\r\n            const updatedData = [...prevData];\r\n            if (field === 'word') {\r\n                updatedData[index].word = value;\r\n            } else {\r\n                const [fieldType, idx] = field.split('-');\r\n                updatedData[index].sentences[idx][fieldType] = value;\r\n            }\r\n            return updatedData;\r\n        });\r\n    };\r\n\r\n    const updateWordData = (updatedWord, index) => {\r\n        const updatedData = data.map((word, i) => (i === index ? updatedWord : word));\r\n        setData(prevData => {\r\n            const newData = [...prevData];\r\n            newData[index] = updatedWord;\r\n            localStorage.setItem('wordsData', JSON.stringify(newData));\r\n            return newData;\r\n        });\r\n    };\r\n\r\n    // const blurHandler = (e, index, field) => {\r\n        // Обработчик для события blur, если необходимо\r\n    // };\r\n\r\n    // const addField = (wordIndex) => {\r\n    //     setData(prevData => {\r\n    //         const updatedData = [...prevData];\r\n    //         updatedData[wordIndex].sentences.push({ sentence: '', translation: '' });\r\n    //         return updatedData;\r\n    //     });\r\n    // };\r\n\r\n    const addField = () => {\r\n        const newSentence = { sentence: '', translation: '' };\r\n        const newSentences = [...formData.sentences, newSentence];\r\n        handleInput({ target: { value: newSentences } }, index, 'sentences');\r\n    };\r\n\r\n    // const addField = () => {\r\n    //     setFormData(prevFormData => ({\r\n    //         ...prevFormData,\r\n    //         sentences: [...prevFormData.sentences, { sentence: '', translation: '' }]\r\n    //     }));\r\n    //     setErrors(prevErrors => ({\r\n    //         ...prevErrors,\r\n    //         sentences: [...prevErrors.sentences, { sentence: \"Field can't be empty\", translation: \"Field can't be empty\" }]\r\n    //     }));\r\n    //     setDirtyFields(prevDirtyFields => ({\r\n    //         ...prevDirtyFields,\r\n    //         sentences: [...prevDirtyFields.sentences, { sentence: false, translation: false }]\r\n    //     }));\r\n    // };\r\n\r\n    const removeField = (wordIndex, sentenceIndex) => {\r\n        setData(prevData => {\r\n            const updatedData = [...prevData];\r\n            if (updatedData[wordIndex] && updatedData[wordIndex].sentences) {\r\n                updatedData[wordIndex].sentences = updatedData[wordIndex].sentences.filter((_, i) => i !== sentenceIndex);\r\n            }\r\n            return updatedData;\r\n        });\r\n    };\r\n\r\n    const handlePublish = (index, updatedWord) => {\r\n        updateWordData(updatedWord, index);\r\n        setShowEditPopup(false);\r\n    };\r\n\r\n    return (\r\n        <div className={mywords.mywords}>\r\n            <div className={mywords.mywords__wrapper}>\r\n                <div className={mywords.mywords__wrapper_header}>\r\n                    <h1>My words</h1>\r\n                    <p>(you have {data.length < 2 ? `${data.length} word` : `${data.length} words`})</p>\r\n                    <Search formData={data} onSearch={handleSearch} />\r\n                </div>\r\n                <div className={mywords.mywords__wrapper_content}>\r\n                    {filteredData.map((item, index) => (\r\n                        <div key={index}>\r\n                            <div className={mywords.mywords__word}>\r\n                                <p>{item.word}</p>\r\n                                <div className={mywords.mywords__icons}>\r\n                                    <img className={mywords.mywords__icons_edit} onClick={() => { setShowEditPopup(true); setEditIndex(index); }} src={edit} alt='Edit'></img>\r\n                                    {showEditPopup && editIndex === index && (\r\n                                        <EditPopup\r\n                                            onClose={() => setShowEditPopup(false)}\r\n                                            index={index}\r\n                                            formData={data[editIndex]} // Передаем правильные данные\r\n                                            handleInput={handleInput}\r\n                                            blurHandler={blurHandler}\r\n                                            addField={() => addField(editIndex)}\r\n                                            removeField={(idx) => removeField(editIndex, idx)}\r\n                                            handlePublish={handlePublish}\r\n                                        />\r\n                                    )}\r\n                                    <img className={mywords.mywords__icons_close} onClick={() => { setShowDeletePopup(true); setDeleteIndex(index); }} src={close} alt='Close'></img>\r\n                                    {showDeletePopup && deleteIndex === index && (\r\n                                        <DeletePopup onClose={() => setShowDeletePopup(false)} index={index} onDelete={handleDelete} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <ul>\r\n                                {item.sentences.map((sentence, i) => (\r\n                                    <li key={i}>{sentence.sentence} - {sentence.translation}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className={mywords.mywords__button}>\r\n                <button className={mywords.mywords__button_button} onClick={() => setShowPopup(true)}>Add a word</button>\r\n                {showPopup && <MyWordsPopup onClose={() => setShowPopup(false)} addWord={addWord} filteredWords={data} />}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyWords;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}