{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWordsPopup\\\\EditPopup\\\\EditPopup.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport editPopup from './EditPopup.module.css';\nimport close from './../../../../../images/close.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  formData,\n  onClose,\n  addField,\n  handleInput,\n  removeField,\n  index,\n  handlePublish,\n  setShowEditPopup\n}) => {\n  _s();\n  const [localFormData, setLocalFormData] = useState({\n    ...formData\n  });\n  const [sentenceErrors, setSentenceErrors] = useState([]);\n  const [translationErrors, setTranslationErrors] = useState([]);\n  const [editFormValid, setEditFormValid] = useState(false);\n  const [wordErrors, setWordErrors] = useState('');\n  const sidebarRef = useRef(null); // Ссылка на сайдбар\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      // Проверяем, был ли клик за пределами сайдбара\n      if (setShowEditPopup && sidebarRef.current && !sidebarRef.current.contains(event.target)) {\n        onClose(); // Закрываем сайдбар\n      }\n    };\n\n    // Добавляем слушатель кликов по документу\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // Очищаем слушатель при размонтировании компонента\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [setShowEditPopup, onClose]);\n  useEffect(() => {\n    validateForm();\n  }, [localFormData]);\n  useEffect(() => {\n    setLocalFormData({\n      ...formData\n    });\n  }, [formData]);\n  const validateForm = () => {\n    const newSentenceErrors = [];\n    const newTranslationErrors = [];\n    const newWordErrors = [];\n    localFormData.sentences.forEach((sentence, i) => {\n      if (!sentence.sentence) {\n        newSentenceErrors[i] = \"Sentence field can't be empty\";\n      } else {\n        newSentenceErrors[i] = \"\";\n      }\n      if (!sentence.translation) {\n        newTranslationErrors[i] = \"Translation field can't be empty\";\n      } else {\n        newTranslationErrors[i] = \"\";\n      }\n    });\n    if (!localFormData.word) {\n      newWordErrors[0] = \"Word field can't be empty\";\n    } else {\n      newWordErrors[0] = \"\";\n    }\n    setSentenceErrors(newSentenceErrors);\n    setTranslationErrors(newTranslationErrors);\n    setWordErrors(newWordErrors);\n    const isFormValid = newSentenceErrors.every(err => !err) && newTranslationErrors.every(err => !err) && newWordErrors.every(err => !err);\n    setEditFormValid(isFormValid);\n  };\n  const handleLocalInput = (e, index, field) => {\n    const {\n      value\n    } = e.target;\n    if (typeof field !== 'string') {\n      console.error('Expected string for field, but got:', typeof field);\n      return;\n    }\n    setLocalFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      if (field === 'word') {\n        updatedData.word = value;\n      } else {\n        const [fieldType, idx] = field.split('-');\n        if (fieldType && idx) {\n          updatedData.sentences[idx][fieldType] = value;\n        }\n      }\n      return updatedData;\n    });\n  };\n  const handlePublishInEdit = () => {\n    handleInput({\n      target: {\n        value: localFormData.word\n      }\n    }, index, 'word');\n    localFormData.sentences.forEach((sentence, i) => {\n      handleInput({\n        target: {\n          value: sentence.sentence\n        }\n      }, index, `sentence-${i}`);\n      handleInput({\n        target: {\n          value: sentence.translation\n        }\n      }, index, `translation-${i}`);\n    });\n    handlePublish();\n    console.log('it does not work');\n    setShowEditPopup(false);\n  };\n  const handleClose = () => {\n    setLocalFormData({\n      ...formData\n    }); // Сбрасываем изменения\n    setShowEditPopup(false);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: editPopup.editPopup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: sidebarRef,\n      className: editPopup.editPopup__wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: editPopup.editPopup__content,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: editPopup.editPopup__content_close,\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: close,\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__inputs,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => handleLocalInput(e, index, 'word'),\n            type: \"text\",\n            placeholder: \"word\",\n            value: localFormData.word,\n            className: editPopup.editPopup__input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), wordErrors[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: editPopup.editPopup__error,\n            children: wordErrors[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 43\n          }, this), localFormData.sentences.map((sentence, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: editPopup.editPopup__sentenceContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: editPopup.editPopup__inputs_repeated,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleLocalInput(e, index, 'sentence-' + i),\n                type: \"text\",\n                placeholder: \"sentence with word\",\n                value: sentence.sentence,\n                className: editPopup.editPopup__input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this), sentenceErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: editPopup.editPopup__error,\n                children: sentenceErrors[i]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 59\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleLocalInput(e, index, 'translation-' + i),\n                type: \"text\",\n                placeholder: \"sentence translation\",\n                value: sentence.translation,\n                className: editPopup.editPopup__input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this), translationErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: editPopup.editPopup__error,\n                children: translationErrors[i]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), localFormData.sentences.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: editPopup.editPopup__removeField,\n              onClick: () => removeField(i),\n              children: \"\\u2013\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__buttons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addField,\n            className: editPopup.editPopup__addButton,\n            children: \"add one more sentence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePublishInEdit,\n            disabled: !editFormValid,\n            className: editPopup.editPopup__doneButton,\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPopup, \"Jq+S0VLy7wqRqrvTzuY/IqrtVc8=\");\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["useState","useEffect","useRef","editPopup","close","jsxDEV","_jsxDEV","EditPopup","formData","onClose","addField","handleInput","removeField","index","handlePublish","setShowEditPopup","_s","localFormData","setLocalFormData","sentenceErrors","setSentenceErrors","translationErrors","setTranslationErrors","editFormValid","setEditFormValid","wordErrors","setWordErrors","sidebarRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","validateForm","newSentenceErrors","newTranslationErrors","newWordErrors","sentences","forEach","sentence","i","translation","word","isFormValid","every","err","handleLocalInput","e","field","value","console","error","prevData","updatedData","fieldType","idx","split","handlePublishInEdit","log","handleClose","className","children","ref","editPopup__wrapper","editPopup__content","editPopup__content_close","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","editPopup__inputs","onChange","type","placeholder","editPopup__input","editPopup__error","map","editPopup__sentenceContainer","editPopup__inputs_repeated","length","editPopup__removeField","editPopup__buttons","editPopup__addButton","disabled","editPopup__doneButton","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/MyWordsPopup/EditPopup/EditPopup.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport editPopup from './EditPopup.module.css';\r\nimport close from './../../../../../images/close.png';\r\n\r\nconst EditPopup = ({ formData, onClose, addField, handleInput, removeField, index, handlePublish, setShowEditPopup }) => {\r\n    const [localFormData, setLocalFormData] = useState({ ...formData });\r\n    const [sentenceErrors, setSentenceErrors] = useState([]);\r\n    const [translationErrors, setTranslationErrors] = useState([]);\r\n    const [editFormValid, setEditFormValid] = useState(false);\r\n    const [wordErrors, setWordErrors] = useState('');\r\n\r\n    const sidebarRef = useRef(null); // Ссылка на сайдбар\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            // Проверяем, был ли клик за пределами сайдбара\r\n            if (setShowEditPopup && sidebarRef.current && !sidebarRef.current.contains(event.target)) {\r\n                onClose(); // Закрываем сайдбар\r\n            }\r\n        };\r\n\r\n        // Добавляем слушатель кликов по документу\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        // Очищаем слушатель при размонтировании компонента\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [setShowEditPopup, onClose]);\r\n\r\n    useEffect(() => {\r\n        validateForm();\r\n    }, [localFormData]);\r\n\r\n    useEffect(() => {\r\n        setLocalFormData({ ...formData });\r\n    }, [formData]);\r\n\r\n    const validateForm = () => {\r\n        const newSentenceErrors = [];\r\n        const newTranslationErrors = [];\r\n        const newWordErrors = [];\r\n\r\n        localFormData.sentences.forEach((sentence, i) => {\r\n            if (!sentence.sentence) {\r\n                newSentenceErrors[i] = \"Sentence field can't be empty\";\r\n            } else {\r\n                newSentenceErrors[i] = \"\";\r\n            }\r\n            if (!sentence.translation) {\r\n                newTranslationErrors[i] = \"Translation field can't be empty\";\r\n            } else {\r\n                newTranslationErrors[i] = \"\";\r\n            }\r\n        });\r\n\r\n        if (!localFormData.word) {\r\n            newWordErrors[0] = \"Word field can't be empty\";\r\n        } else {\r\n            newWordErrors[0] = \"\";\r\n        }\r\n\r\n        setSentenceErrors(newSentenceErrors);\r\n        setTranslationErrors(newTranslationErrors);\r\n        setWordErrors(newWordErrors);\r\n\r\n        const isFormValid = newSentenceErrors.every(err => !err) && newTranslationErrors.every(err => !err) && newWordErrors.every(err => !err);\r\n        setEditFormValid(isFormValid);\r\n    };\r\n\r\n\r\n    const handleLocalInput = (e, index, field) => {\r\n        const { value } = e.target;\r\n    \r\n        if (typeof field !== 'string') {\r\n            console.error('Expected string for field, but got:', typeof field);\r\n            return;\r\n        }\r\n    \r\n        setLocalFormData(prevData => {\r\n            const updatedData = { ...prevData };\r\n            if (field === 'word') {\r\n                updatedData.word = value;\r\n            } else {\r\n                const [fieldType, idx] = field.split('-');\r\n                if (fieldType && idx) {\r\n                    updatedData.sentences[idx][fieldType] = value;\r\n                }\r\n            }\r\n            return updatedData;\r\n        });\r\n    };\r\n\r\n    const handlePublishInEdit = () => {\r\n        handleInput({ target: { value: localFormData.word } }, index, 'word');\r\n        localFormData.sentences.forEach((sentence, i) => {\r\n            handleInput({ target: { value: sentence.sentence } }, index, `sentence-${i}`);\r\n            handleInput({ target: { value: sentence.translation } }, index, `translation-${i}`);\r\n        });\r\n        handlePublish();\r\n        console.log('it does not work')\r\n        setShowEditPopup(false);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setLocalFormData({ ...formData }); // Сбрасываем изменения\r\n        setShowEditPopup(false);\r\n        onClose()\r\n    };\r\n\r\n    return (\r\n        <div className={editPopup.editPopup}>\r\n            <div ref={sidebarRef}  className={editPopup.editPopup__wrapper}>\r\n                <div className={editPopup.editPopup__content}>\r\n                    <button className={editPopup.editPopup__content_close} onClick={handleClose}>\r\n                        <img src={close} alt='Close' />\r\n                    </button>\r\n                    <div className={editPopup.editPopup__inputs}>\r\n                        <input\r\n                            onChange={(e) => handleLocalInput(e, index, 'word')}\r\n                            type='text'\r\n                            placeholder='word'\r\n                            value={localFormData.word}\r\n                            className={editPopup.editPopup__input}\r\n                        />\r\n                        {wordErrors[0] && <div className={editPopup.editPopup__error}>{wordErrors[0]}</div>}\r\n                        {localFormData.sentences.map((sentence, i) => (\r\n                            <div key={i} className={editPopup.editPopup__sentenceContainer}>\r\n                                <div className={editPopup.editPopup__inputs_repeated}>\r\n                                    <input\r\n                                        onChange={(e) => handleLocalInput(e, index, 'sentence-' +i)}\r\n                                        type='text'\r\n                                        placeholder='sentence with word'\r\n                                        value={sentence.sentence}\r\n                                        className={editPopup.editPopup__input}\r\n                                    />\r\n                                    {sentenceErrors[i] && <div className={editPopup.editPopup__error}>{sentenceErrors[i]}</div>}\r\n                                    <input\r\n                                        onChange={(e) => handleLocalInput(e, index, 'translation-' +i)}\r\n                                        type='text'\r\n                                        placeholder='sentence translation'\r\n                                        value={sentence.translation}\r\n                                        className={editPopup.editPopup__input}\r\n                                    />\r\n                                    {translationErrors[i] && <div className={editPopup.editPopup__error}>{translationErrors[i]}</div>}\r\n                                </div>\r\n                                {localFormData.sentences.length > 1 && (\r\n                                    <span\r\n                                        className={editPopup.editPopup__removeField}\r\n                                        onClick={() => removeField(i)}\r\n                                    >\r\n                                        –\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={editPopup.editPopup__buttons}>\r\n                        <button onClick={addField} className={editPopup.editPopup__addButton}>add one more sentence</button>\r\n                        <button onClick={handlePublishInEdit} disabled={!editFormValid} className={editPopup.editPopup__doneButton}>done</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}