{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWordsPopup\\\\EditPopup\\\\EditPopup.jsx\",\n  _s = $RefreshSig$();\nimport editPopup from './EditPopup.module.css';\nimport close from './../../../../../images/close.png';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  formData,\n  onClose,\n  addField,\n  handleInput,\n  removeField,\n  index,\n  handlePublish\n}) => {\n  _s();\n  const [localFormData, setLocalFormData] = useState(formData);\n  useEffect(() => {\n    setLocalFormData(formData);\n  }, [formData]);\n  const handleLocalInput = (e, field) => {\n    const {\n      value\n    } = e.target;\n    setLocalFormData(prev => {\n      const updatedFormData = {\n        ...prev\n      };\n      if (field === 'word') {\n        updatedFormData.word = value;\n      } else {\n        const [fieldType, idx] = field.split('-');\n        updatedFormData.sentences[idx][fieldType] = value;\n      }\n      return updatedFormData;\n    });\n  };\n  const publishChanges = () => {\n    handlePublish(localFormData); // Применение изменений\n    onClose(); // Закрытие попапа\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: editPopup.editPopup,\n    onClick: e => e.stopPropagation(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: editPopup.editPopup__content,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: editPopup.editPopup__content_close,\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: close,\n          alt: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: editPopup.editPopup__form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__field,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: localFormData.word,\n            onChange: e => handleLocalInput(e, 'word')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), localFormData.sentences.map((sentence, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: editPopup.editPopup__field,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Sentence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: sentence.sentence,\n              onChange: e => handleLocalInput(e, `sentence-${idx}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: editPopup.editPopup__field,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Translation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: sentence.translation,\n              onChange: e => handleLocalInput(e, `translation-${idx}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeField(index, idx),\n            children: \"Remove Sentence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => addField(index),\n          children: \"Add Sentence\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: publishChanges,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPopup, \"KoGXFQEPlUPAXRM5a06V9HJlArI=\");\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["editPopup","close","useState","useEffect","jsxDEV","_jsxDEV","EditPopup","formData","onClose","addField","handleInput","removeField","index","handlePublish","_s","localFormData","setLocalFormData","handleLocalInput","e","field","value","target","prev","updatedFormData","word","fieldType","idx","split","sentences","publishChanges","className","onClick","stopPropagation","children","editPopup__content","editPopup__content_close","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","editPopup__form","editPopup__field","onChange","map","sentence","translation","type","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/MyWordsPopup/EditPopup/EditPopup.jsx"],"sourcesContent":["import editPopup from './EditPopup.module.css';\r\nimport close from './../../../../../images/close.png';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst EditPopup = ({ formData, onClose, addField, handleInput, removeField, index, handlePublish }) => {\r\n    const [localFormData, setLocalFormData] = useState(formData);\r\n\r\n    useEffect(() => {\r\n        setLocalFormData(formData);\r\n    }, [formData]);\r\n\r\n    const handleLocalInput = (e, field) => {\r\n        const { value } = e.target;\r\n        setLocalFormData((prev) => {\r\n            const updatedFormData = { ...prev };\r\n            if (field === 'word') {\r\n                updatedFormData.word = value;\r\n            } else {\r\n                const [fieldType, idx] = field.split('-');\r\n                updatedFormData.sentences[idx][fieldType] = value;\r\n            }\r\n            return updatedFormData;\r\n        });\r\n    };\r\n\r\n    const publishChanges = () => {\r\n        handlePublish(localFormData); // Применение изменений\r\n        onClose(); // Закрытие попапа\r\n    };\r\n\r\n    return (\r\n        <div className={editPopup.editPopup} onClick={(e) => e.stopPropagation()}>\r\n            <div className={editPopup.editPopup__content}>\r\n                <button className={editPopup.editPopup__content_close} onClick={onClose}>\r\n                    <img src={close} alt='Close' />\r\n                </button>\r\n                <form className={editPopup.editPopup__form}>\r\n                    <div className={editPopup.editPopup__field}>\r\n                        <label>Word</label>\r\n                        <input\r\n                            value={localFormData.word}\r\n                            onChange={(e) => handleLocalInput(e, 'word')}\r\n                        />\r\n                    </div>\r\n                    {localFormData.sentences.map((sentence, idx) => (\r\n                        <div key={idx}>\r\n                            <div className={editPopup.editPopup__field}>\r\n                                <label>Sentence</label>\r\n                                <input\r\n                                    value={sentence.sentence}\r\n                                    onChange={(e) => handleLocalInput(e, `sentence-${idx}`)}\r\n                                />\r\n                            </div>\r\n                            <div className={editPopup.editPopup__field}>\r\n                                <label>Translation</label>\r\n                                <input\r\n                                    value={sentence.translation}\r\n                                    onChange={(e) => handleLocalInput(e, `translation-${idx}`)}\r\n                                />\r\n                            </div>\r\n                            <button type=\"button\" onClick={() => removeField(index, idx)}>\r\n                                Remove Sentence\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                    <button type=\"button\" onClick={() => addField(index)}>\r\n                        Add Sentence\r\n                    </button>\r\n                    <button type=\"button\" onClick={publishChanges}>\r\n                        Done\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}