{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWordsPopup\\\\EditPopup\\\\EditPopup.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport editpopup from './EditPopup.module.css';\nimport close from './../../../../../src/images/close.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  onClose,\n  index,\n  formData,\n  handleInput,\n  blurHandler,\n  addField,\n  removeField,\n  handlePublish\n}) => {\n  _s();\n  const [localData, setLocalData] = useState({\n    word: '',\n    sentences: []\n  });\n  useEffect(() => {\n    // Инициализация локального состояния при открытии попапа\n    setLocalData(formData);\n  }, [formData]);\n  const handleLocalInput = (e, field) => {\n    const {\n      value\n    } = e.target;\n    if (field === 'word') {\n      setLocalData(prev => ({\n        ...prev,\n        word: value\n      }));\n    } else {\n      const [fieldType, idx] = field.split('-');\n      setLocalData(prev => {\n        const updatedSentences = [...prev.sentences];\n        updatedSentences[idx][fieldType] = value;\n        return {\n          ...prev,\n          sentences: updatedSentences\n        };\n      });\n    }\n  };\n  const handleSave = () => {\n    handlePublish(localData, index); // Передача локальных данных в родительский компонент\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: editpopup.editpopup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: editpopup.editpopup__wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: editpopup.editpopup__content,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: editpopup.editpopup__content_close,\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: close,\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editpopup.editpopup__inputs,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => handleLocalInput(e, 'word'),\n            name: \"word\",\n            type: \"text\",\n            placeholder: \"word\",\n            value: localData.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), localData.sentences.map((sentence, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleLocalInput(e, `sentence-${i}`),\n              name: `sentence-${i}`,\n              type: \"text\",\n              placeholder: \"sentence with word\",\n              value: sentence.sentence\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleLocalInput(e, `translation-${i}`),\n              name: `translation-${i}`,\n              type: \"text\",\n              placeholder: \"sentence translation\",\n              value: sentence.translation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), localData.sentences.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                cursor: 'pointer',\n                marginLeft: '10px'\n              },\n              onClick: () => removeField(index, i),\n              children: \"\\u2013\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container__buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addField,\n            children: \"add one more sentence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPopup, \"aFKtHE52W4Lw7tx3axEkQe0jXLQ=\");\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["useEffect","useState","editpopup","close","jsxDEV","_jsxDEV","EditPopup","onClose","index","formData","handleInput","blurHandler","addField","removeField","handlePublish","_s","localData","setLocalData","word","sentences","handleLocalInput","e","field","value","target","prev","fieldType","idx","split","updatedSentences","handleSave","className","children","editpopup__wrapper","editpopup__content","editpopup__content_close","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","editpopup__inputs","onChange","name","type","placeholder","map","sentence","i","style","display","translation","length","cursor","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/MyWordsPopup/EditPopup/EditPopup.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport editpopup from './EditPopup.module.css';\r\nimport close from './../../../../../src/images/close.png';\r\n\r\nconst EditPopup = ({ onClose, index, formData, handleInput, blurHandler, addField, removeField, handlePublish }) => {\r\n    const [localData, setLocalData] = useState({ word: '', sentences: [] });\r\n\r\n    useEffect(() => {\r\n        // Инициализация локального состояния при открытии попапа\r\n        setLocalData(formData);\r\n    }, [formData]);\r\n\r\n    const handleLocalInput = (e, field) => {\r\n        const { value } = e.target;\r\n        if (field === 'word') {\r\n            setLocalData((prev) => ({ ...prev, word: value }));\r\n        } else {\r\n            const [fieldType, idx] = field.split('-');\r\n            setLocalData((prev) => {\r\n                const updatedSentences = [...prev.sentences];\r\n                updatedSentences[idx][fieldType] = value;\r\n                return { ...prev, sentences: updatedSentences };\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSave = () => {\r\n        handlePublish(localData, index); // Передача локальных данных в родительский компонент\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <div className={editpopup.editpopup}>\r\n            <div className={editpopup.editpopup__wrapper}>\r\n                <div className={editpopup.editpopup__content}>\r\n                    <button className={editpopup.editpopup__content_close} onClick={onClose}>\r\n                        <img src={close} alt='Close' />\r\n                    </button>\r\n                    <div className={editpopup.editpopup__inputs}>\r\n                        <input\r\n                            onChange={(e) => handleLocalInput(e, 'word')}\r\n                            name='word'\r\n                            type='text'\r\n                            placeholder='word'\r\n                            value={localData.word}\r\n                        />\r\n                        {localData.sentences.map((sentence, i) => (\r\n                            <div key={i} style={{ display: 'flex' }}>\r\n                                <input\r\n                                    onChange={(e) => handleLocalInput(e, `sentence-${i}`)}\r\n                                    name={`sentence-${i}`}\r\n                                    type='text'\r\n                                    placeholder='sentence with word'\r\n                                    value={sentence.sentence}\r\n                                />\r\n                                <input\r\n                                    onChange={(e) => handleLocalInput(e, `translation-${i}`)}\r\n                                    name={`translation-${i}`}\r\n                                    type='text'\r\n                                    placeholder='sentence translation'\r\n                                    value={sentence.translation}\r\n                                />\r\n                                {localData.sentences.length > 1 && (\r\n                                    <span\r\n                                        style={{ cursor: 'pointer', marginLeft: '10px' }}\r\n                                        onClick={() => removeField(index, i)}\r\n                                    >\r\n                                        –\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className='container__buttons'>\r\n                        <button onClick={addField}>add one more sentence</button>\r\n                        <div></div>\r\n                        <button onClick={handleSave}>done</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}