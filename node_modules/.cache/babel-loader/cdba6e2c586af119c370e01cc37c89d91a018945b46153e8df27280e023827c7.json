{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWordsPopup\\\\EditPopup\\\\EditPopup.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport editPopup from './EditPopup.module.css';\nimport close from './../../../../../images/close.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  formData,\n  onClose,\n  addField,\n  handleInput,\n  removeField,\n  index,\n  handlePublish,\n  setShowEditPopup\n}) => {\n  _s();\n  const [localFormData, setLocalFormData] = useState({\n    ...formData\n  });\n  const [sentenceErrors, setSentenceErrors] = useState([]);\n  const [translationErrors, setTranslationErrors] = useState([]);\n  const [editFormValid, setEditFormValid] = useState(false);\n  const [wordErrors, setWordErrors] = useState('');\n  const popupRef = useRef(null);\n  useEffect(() => {\n    setLocalFormData({\n      ...formData\n    });\n  }, [formData]);\n  useEffect(() => {\n    validateForm();\n  }, [localFormData]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (popupRef.current && !popupRef.current.contains(event.target)) {\n        const isRemoveButton = event.target.closest(`.${editPopup.editPopup__removeField}`);\n        if (!isRemoveButton) {\n          handleClose(); // Закрываем попап\n        }\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const handleClose = () => {\n    setLocalFormData({\n      ...formData\n    }); // Возвращаем локальное состояние к изначальному\n    setShowEditPopup(false); // Закрываем попап\n    onClose(); // Вызываем внешний обработчик закрытия\n  };\n  const handleLocalRemoveField = index => {\n    setLocalFormData(prevData => {\n      const updatedSentences = prevData.sentences.filter((_, i) => i !== index);\n      return {\n        ...prevData,\n        sentences: updatedSentences\n      };\n    });\n  };\n  const validateForm = () => {\n    const newSentenceErrors = [];\n    const newTranslationErrors = [];\n    const newWordErrors = [];\n    localFormData.sentences.forEach((sentence, i) => {\n      newSentenceErrors[i] = sentence.sentence ? '' : \"Sentence field can't be empty\";\n      newTranslationErrors[i] = sentence.translation ? '' : \"Translation field can't be empty\";\n    });\n    newWordErrors[0] = localFormData.word ? '' : \"Word field can't be empty\";\n    setSentenceErrors(newSentenceErrors);\n    setTranslationErrors(newTranslationErrors);\n    setWordErrors(newWordErrors);\n    const isFormValid = newSentenceErrors.every(err => !err) && newTranslationErrors.every(err => !err) && newWordErrors.every(err => !err);\n    setEditFormValid(isFormValid);\n  };\n  const handleLocalInput = (e, index, field) => {\n    const {\n      value\n    } = e.target;\n\n    // if (typeof field !== 'string') {\n    //     console.error('Expected string for field, but got:', typeof field);\n    //     return;\n    // }\n\n    setLocalFormData(prevData => {\n      const updatedData = [...prevData];\n      if (field === 'word') {\n        updatedData[index].word = value;\n      } else {\n        const [type, idx] = field.split('-');\n        // if (fieldType && idx !== undefined && updatedData.sentences[idx]) {\n        updatedData[index].sentences[idx][type] = value;\n      }\n      return updatedData;\n    });\n  };\n  const handlePublishInEdit = () => {\n    // Передаем слово\n    handleInput({\n      target: {\n        value: localFormData.word\n      }\n    }, index, 'word');\n    // Передаем предложения и переводы\n    localFormData.sentences.forEach((sentence, i) => {\n      handleInput({\n        target: {\n          value: sentence.sentence\n        }\n      }, index, `sentence-${i}`);\n      handleInput({\n        target: {\n          value: sentence.translation\n        }\n      }, index, `translation-${i}`);\n    });\n    removeField(localFormData.sentences.length);\n    handlePublish();\n    setShowEditPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: editPopup.editPopup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: editPopup.editPopup__overlay,\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: popupRef,\n        className: editPopup.editPopup__wrapper,\n        onMouseDown: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__content,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: editPopup.editPopup__content_close,\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: close,\n              alt: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: editPopup.editPopup__inputs,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleLocalInput(e, index, 'word'),\n              type: \"text\",\n              placeholder: \"word\",\n              value: localFormData.word,\n              className: editPopup.editPopup__input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this), wordErrors[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: editPopup.editPopup__error,\n              children: wordErrors[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 43\n            }, this), localFormData.sentences.map((sentence, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: editPopup.editPopup__sentenceContainer,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: editPopup.editPopup__inputs_repeated,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => handleLocalInput(e, index, 'sentence-' + i),\n                  type: \"text\",\n                  placeholder: \"sentence with word\",\n                  value: sentence.sentence,\n                  className: editPopup.editPopup__input\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this), sentenceErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: editPopup.editPopup__error,\n                  children: sentenceErrors[i]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 59\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => handleLocalInput(e, index, 'translation-' + i),\n                  type: \"text\",\n                  placeholder: \"sentence translation\",\n                  value: sentence.translation,\n                  className: editPopup.editPopup__input\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this), translationErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: editPopup.editPopup__error,\n                  children: translationErrors[i]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 62\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), localFormData.sentences.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: editPopup.editPopup__removeField,\n                onClick: e => {\n                  e.stopPropagation();\n                  handleLocalRemoveField(i);\n                },\n                children: \"\\u2013\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: editPopup.editPopup__buttons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addField,\n              className: editPopup.editPopup__addButton,\n              children: \"add one more sentence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePublishInEdit,\n              disabled: !editFormValid,\n              className: editPopup.editPopup__doneButton,\n              children: \"done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPopup, \"jXmWC05GjQMoA/tQnX8OoA5O18w=\");\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["useState","useEffect","useRef","editPopup","close","jsxDEV","_jsxDEV","EditPopup","formData","onClose","addField","handleInput","removeField","index","handlePublish","setShowEditPopup","_s","localFormData","setLocalFormData","sentenceErrors","setSentenceErrors","translationErrors","setTranslationErrors","editFormValid","setEditFormValid","wordErrors","setWordErrors","popupRef","validateForm","handleClickOutside","event","current","contains","target","isRemoveButton","closest","editPopup__removeField","handleClose","document","addEventListener","removeEventListener","handleLocalRemoveField","prevData","updatedSentences","sentences","filter","_","i","newSentenceErrors","newTranslationErrors","newWordErrors","forEach","sentence","translation","word","isFormValid","every","err","handleLocalInput","e","field","value","updatedData","type","idx","split","handlePublishInEdit","length","className","children","editPopup__overlay","onClick","ref","editPopup__wrapper","onMouseDown","stopPropagation","editPopup__content","editPopup__content_close","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","editPopup__inputs","onChange","placeholder","editPopup__input","editPopup__error","map","editPopup__sentenceContainer","editPopup__inputs_repeated","editPopup__buttons","editPopup__addButton","disabled","editPopup__doneButton","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/MyWordsPopup/EditPopup/EditPopup.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport editPopup from './EditPopup.module.css';\r\nimport close from './../../../../../images/close.png';\r\n\r\nconst EditPopup = ({ formData, onClose, addField, handleInput, removeField, index, handlePublish, setShowEditPopup }) => {\r\n    const [localFormData, setLocalFormData] = useState({ ...formData });\r\n    const [sentenceErrors, setSentenceErrors] = useState([]);\r\n    const [translationErrors, setTranslationErrors] = useState([]);\r\n    const [editFormValid, setEditFormValid] = useState(false);\r\n    const [wordErrors, setWordErrors] = useState('');\r\n    const popupRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setLocalFormData({ ...formData });\r\n    }, [formData]);\r\n\r\n    useEffect(() => {\r\n        validateForm();\r\n    }, [localFormData]);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (popupRef.current && !popupRef.current.contains(event.target)) {\r\n                const isRemoveButton = event.target.closest(`.${editPopup.editPopup__removeField}`);\r\n                if (!isRemoveButton) {\r\n                    handleClose(); // Закрываем попап\r\n                }\r\n            }\r\n        };\r\n    \r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const handleClose = () => {\r\n        setLocalFormData({ ...formData }); // Возвращаем локальное состояние к изначальному\r\n        setShowEditPopup(false); // Закрываем попап\r\n        onClose(); // Вызываем внешний обработчик закрытия\r\n    };\r\n\r\n    const handleLocalRemoveField = (index) => {\r\n        setLocalFormData((prevData) => {\r\n            const updatedSentences = prevData.sentences.filter((_, i) => i !== index);\r\n            return { ...prevData, sentences: updatedSentences };\r\n        });\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newSentenceErrors = [];\r\n        const newTranslationErrors = [];\r\n        const newWordErrors = [];\r\n\r\n        localFormData.sentences.forEach((sentence, i) => {\r\n            newSentenceErrors[i] = sentence.sentence ? '' : \"Sentence field can't be empty\";\r\n            newTranslationErrors[i] = sentence.translation ? '' : \"Translation field can't be empty\";\r\n        });\r\n\r\n        newWordErrors[0] = localFormData.word ? '' : \"Word field can't be empty\";\r\n\r\n        setSentenceErrors(newSentenceErrors);\r\n        setTranslationErrors(newTranslationErrors);\r\n        setWordErrors(newWordErrors);\r\n\r\n        const isFormValid =\r\n            newSentenceErrors.every((err) => !err) &&\r\n            newTranslationErrors.every((err) => !err) &&\r\n            newWordErrors.every((err) => !err);\r\n\r\n        setEditFormValid(isFormValid);\r\n    };\r\n\r\n\r\n    const handleLocalInput = (e, index, field) => {\r\n        const { value } = e.target;\r\n    \r\n        // if (typeof field !== 'string') {\r\n        //     console.error('Expected string for field, but got:', typeof field);\r\n        //     return;\r\n        // }\r\n    \r\n        setLocalFormData((prevData) => {\r\n            const updatedData = [ ...prevData];\r\n            if (field === 'word') {\r\n                updatedData[index].word = value;\r\n            } else {\r\n                const [type, idx] = field.split('-');\r\n                // if (fieldType && idx !== undefined && updatedData.sentences[idx]) {\r\n                    updatedData[index].sentences[idx][type] = value;\r\n            }\r\n            return updatedData;\r\n        });\r\n    };\r\n\r\n    const handlePublishInEdit = () => {\r\n        // Передаем слово\r\n        handleInput({ target: { value: localFormData.word } }, index, 'word');\r\n        // Передаем предложения и переводы\r\n        localFormData.sentences.forEach((sentence, i) => {\r\n            handleInput({ target: { value: sentence.sentence } }, index, `sentence-${i}`);\r\n            handleInput({ target: { value: sentence.translation } }, index, `translation-${i}`);\r\n        });\r\n    \r\n        removeField(localFormData.sentences.length);\r\n        handlePublish();\r\n        setShowEditPopup(false);\r\n    };\r\n\r\n    return (\r\n        <div className={editPopup.editPopup}>\r\n            <div className={editPopup.editPopup__overlay} onClick={handleClose}>\r\n            <div ref={popupRef} className={editPopup.editPopup__wrapper} onMouseDown={(e) => e.stopPropagation()}>\r\n                <div className={editPopup.editPopup__content}>\r\n                    <button className={editPopup.editPopup__content_close} onClick={handleClose}>\r\n                        <img src={close} alt='Close' />\r\n                    </button>\r\n                    <div className={editPopup.editPopup__inputs}>\r\n                        <input\r\n                            onChange={(e) => handleLocalInput(e, index, 'word')}\r\n                            type='text'\r\n                            placeholder='word'\r\n                            value={localFormData.word}\r\n                            className={editPopup.editPopup__input}\r\n                        />\r\n                        {wordErrors[0] && <div className={editPopup.editPopup__error}>{wordErrors[0]}</div>}\r\n                        {localFormData.sentences.map((sentence, i) => (\r\n                            <div key={i} className={editPopup.editPopup__sentenceContainer}>\r\n                                <div className={editPopup.editPopup__inputs_repeated}>\r\n                                    <input\r\n                                        onChange={(e) => handleLocalInput(e, index, 'sentence-' +i)}\r\n                                        type='text'\r\n                                        placeholder='sentence with word'\r\n                                        value={sentence.sentence}\r\n                                        className={editPopup.editPopup__input}\r\n                                    />\r\n                                    {sentenceErrors[i] && <div className={editPopup.editPopup__error}>{sentenceErrors[i]}</div>}\r\n                                    <input\r\n                                        onChange={(e) => handleLocalInput(e, index, 'translation-' +i)}\r\n                                        type='text'\r\n                                        placeholder='sentence translation'\r\n                                        value={sentence.translation}\r\n                                        className={editPopup.editPopup__input}\r\n                                    />\r\n                                    {translationErrors[i] && <div className={editPopup.editPopup__error}>{translationErrors[i]}</div>}\r\n                                </div>\r\n                                {localFormData.sentences.length > 1 && (\r\n                                    <span\r\n                                        className={editPopup.editPopup__removeField}\r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            handleLocalRemoveField(i);\r\n                                        }}\r\n                                    >\r\n                                        –\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={editPopup.editPopup__buttons}>\r\n                        <button onClick={addField} className={editPopup.editPopup__addButton}>add one more sentence</button>\r\n                        <button onClick={handlePublishInEdit} disabled={!editFormValid} className={editPopup.editPopup__doneButton}>done</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}