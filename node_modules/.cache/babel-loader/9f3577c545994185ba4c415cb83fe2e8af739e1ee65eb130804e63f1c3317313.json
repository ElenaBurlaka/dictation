{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWords.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport mywords from './MyWords.module.css';\nimport MyWordsPopup from './MyWordsPopup/MyWordsPopup';\nimport Search from './Search/Search';\nimport edit from './../../../images/edit.png';\nimport close from './../../../images/close.png';\nimport DeletePopup from './DeletePopup/DeletePopup';\nimport EditPopup from './MyWordsPopup/EditPopup/EditPopup';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyWords = ({\n  blurHandler\n}) => {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [showDeletePopup, setShowDeletePopup] = useState(false);\n  const [showEditPopup, setShowEditPopup] = useState(false);\n  const [deleteIndex, setDeleteIndex] = useState(null);\n  const [editIndex, setEditIndex] = useState(null);\n  const [tempData, setTempData] = useState([]);\n  useEffect(() => {\n    const savedData = localStorage.getItem('wordsData');\n    if (savedData) {\n      const parsedData = JSON.parse(savedData);\n      setData(parsedData);\n      setFilteredData(parsedData);\n    }\n  }, []);\n  const [formData, setFormData] = useState(() => {\n    // Загружаем данные из локального хранилища при инициализации\n    const savedData = localStorage.getItem('formData');\n    return savedData ? JSON.parse(savedData) : initialData; // initialData — ваши данные по умолчанию\n  });\n  const addWord = wordData => {\n    const updatedData = [...data, wordData];\n    setData(updatedData);\n    setFilteredData(updatedData);\n    localStorage.setItem('wordsData', JSON.stringify(updatedData));\n    setShowPopup(false);\n  };\n  const handleSearch = filteredWords => {\n    setFilteredData(filteredWords);\n  };\n  const handleDelete = index => {\n    const updatedData = data.filter((_, i) => i !== index);\n    setData(updatedData);\n    setFilteredData(updatedData);\n    localStorage.setItem('wordsData', JSON.stringify(updatedData));\n    setShowDeletePopup(false);\n    setDeleteIndex(null);\n  };\n  const handleInput = (e, index, field) => {\n    const {\n      value\n    } = e.target;\n    setTempData(prevTempData => {\n      const updatedTempData = [...prevTempData];\n      if (field === 'word') {\n        updatedTempData[0].word = value; // используем [0], так как мы редактируем только один элемент\n      } else {\n        const [fieldType, idx] = field.split('-');\n        updatedTempData[0].sentences[idx][fieldType] = value;\n      }\n      return updatedTempData;\n    });\n  };\n  const addField = wordIndex => {\n    setTempData(prevTempData => {\n      const updatedTempData = [...prevTempData];\n      updatedTempData[0].sentences.push({\n        sentence: '',\n        translation: ''\n      });\n      return updatedTempData;\n    });\n  };\n  const removeField = (wordIndex, sentenceIndex) => {\n    setTempData(prevTempData => {\n      const updatedTempData = [...prevTempData];\n      if (updatedTempData[0] && updatedTempData[0].sentences) {\n        updatedTempData[0].sentences = updatedTempData[0].sentences.filter((_, i) => i !== sentenceIndex);\n      }\n      return updatedTempData;\n    });\n  };\n  const handlePublish = () => {\n    const updatedData = [...data];\n    updatedData[editIndex] = tempData[0]; // Обновляем конкретный элемент\n    setData(updatedData);\n    localStorage.setItem('wordsData', JSON.stringify(updatedData));\n    setShowEditPopup(false);\n    setEditIndex(null);\n  };\n  const handleCloseWithoutSaving = () => {\n    setShowEditPopup(false);\n    setTempData([]); // Сбрасываем временные данные при закрытии без сохранения\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mywords.mywords,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mywords.mywords__wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: mywords.mywords__wrapper_header,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: mywords.mywords__header_words,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My words\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"(you have \", data.length < 2 ? `${data.length} word` : `${data.length} words`, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: mywords.mywords__buttons_block,\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            formData: data,\n            onSearch: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: mywords.mywords__button,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: mywords.mywords__button_button,\n              onClick: () => setShowPopup(true),\n              children: \"Add a word\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), showPopup && /*#__PURE__*/_jsxDEV(MyWordsPopup, {\n              onClose: () => setShowPopup(false),\n              addWord: addWord,\n              filteredWords: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: mywords.mywords__wrapper_body,\n        children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: mywords.mywords__container,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: mywords.mywords__wrapper_content,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: mywords.mywords__icons,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: mywords.mywords__icons_edit,\n                onClick: () => {\n                  setShowEditPopup(true);\n                  setEditIndex(index);\n                  setTempData([data[index]]);\n                },\n                src: edit,\n                alt: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), showEditPopup && editIndex === index && /*#__PURE__*/_jsxDEV(EditPopup, {\n                onClose: handleCloseWithoutSaving,\n                index: index,\n                formData: tempData[0],\n                handleInput: handleInput,\n                blurHandler: blurHandler,\n                addField: () => addField(editIndex),\n                removeField: idx => removeField(editIndex, idx),\n                handlePublish: handlePublish,\n                setShowEditPopup: setShowEditPopup\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: mywords.mywords__icons_close,\n                onClick: () => {\n                  setShowDeletePopup(true);\n                  setDeleteIndex(index);\n                },\n                src: close,\n                alt: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), showDeletePopup && deleteIndex === index && /*#__PURE__*/_jsxDEV(DeletePopup, {\n                onClose: () => setShowDeletePopup(false),\n                index: index,\n                onDelete: () => handleDelete(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: mywords.mywords__word,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.word\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: mywords.mywords__list_sentence,\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: item.sentences.map((sentence, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: mywords.mywords_list__sentence,\n                    children: [sentence.sentence, \" \"]\n                  }, `sentence-${i}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: mywords.mywords_list__translation,\n                    children: sentence.translation\n                  }, `translation-${i}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(MyWords, \"mPab0w0sHE/uMFNib18bCkhMGKU=\");\n_c = MyWords;\nexport default MyWords;\nvar _c;\n$RefreshReg$(_c, \"MyWords\");","map":{"version":3,"names":["useState","useEffect","mywords","MyWordsPopup","Search","edit","close","DeletePopup","EditPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","MyWords","blurHandler","_s","showPopup","setShowPopup","data","setData","filteredData","setFilteredData","showDeletePopup","setShowDeletePopup","showEditPopup","setShowEditPopup","deleteIndex","setDeleteIndex","editIndex","setEditIndex","tempData","setTempData","savedData","localStorage","getItem","parsedData","JSON","parse","formData","setFormData","initialData","addWord","wordData","updatedData","setItem","stringify","handleSearch","filteredWords","handleDelete","index","filter","_","i","handleInput","e","field","value","target","prevTempData","updatedTempData","word","fieldType","idx","split","sentences","addField","wordIndex","push","sentence","translation","removeField","sentenceIndex","handlePublish","handleCloseWithoutSaving","className","children","mywords__wrapper","mywords__wrapper_header","mywords__header_words","fileName","_jsxFileName","lineNumber","columnNumber","length","mywords__buttons_block","onSearch","mywords__button","mywords__button_button","onClick","onClose","mywords__wrapper_body","map","item","mywords__container","mywords__wrapper_content","mywords__icons","mywords__icons_edit","src","alt","mywords__icons_close","onDelete","mywords__word","mywords__list_sentence","mywords_list__sentence","mywords_list__translation","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/MyWords.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport mywords from './MyWords.module.css';\r\nimport MyWordsPopup from './MyWordsPopup/MyWordsPopup';\r\nimport Search from './Search/Search';\r\nimport edit from './../../../images/edit.png';\r\nimport close from './../../../images/close.png';\r\nimport DeletePopup from './DeletePopup/DeletePopup';\r\nimport EditPopup from './MyWordsPopup/EditPopup/EditPopup';\r\n\r\nconst MyWords = ({ blurHandler }) => {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [showDeletePopup, setShowDeletePopup] = useState(false);\r\n    const [showEditPopup, setShowEditPopup] = useState(false);\r\n    const [deleteIndex, setDeleteIndex] = useState(null);\r\n    const [editIndex, setEditIndex] = useState(null);\r\n    const [tempData, setTempData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const savedData = localStorage.getItem('wordsData');\r\n        if (savedData) {\r\n            const parsedData = JSON.parse(savedData);\r\n            setData(parsedData);\r\n            setFilteredData(parsedData);\r\n        }\r\n    }, []);\r\n\r\n    const [formData, setFormData] = useState(() => {\r\n        // Загружаем данные из локального хранилища при инициализации\r\n        const savedData = localStorage.getItem('formData');\r\n        return savedData ? JSON.parse(savedData) : initialData; // initialData — ваши данные по умолчанию\r\n    });\r\n\r\n    const addWord = (wordData) => {\r\n        const updatedData = [...data, wordData];\r\n        setData(updatedData);\r\n        setFilteredData(updatedData);\r\n        localStorage.setItem('wordsData', JSON.stringify(updatedData));\r\n        setShowPopup(false);\r\n    };\r\n\r\n    const handleSearch = (filteredWords) => {\r\n        setFilteredData(filteredWords);\r\n    };\r\n\r\n    const handleDelete = (index) => {\r\n        const updatedData = data.filter((_, i) => i !== index);\r\n        setData(updatedData);\r\n        setFilteredData(updatedData);\r\n        localStorage.setItem('wordsData', JSON.stringify(updatedData));\r\n        setShowDeletePopup(false);\r\n        setDeleteIndex(null);\r\n    };\r\n\r\n    const handleInput = (e, index, field) => {\r\n        const { value } = e.target;\r\n        setTempData((prevTempData) => {\r\n            const updatedTempData = [...prevTempData];\r\n            if (field === 'word') {\r\n                updatedTempData[0].word = value; // используем [0], так как мы редактируем только один элемент\r\n            } else {\r\n                const [fieldType, idx] = field.split('-');\r\n                updatedTempData[0].sentences[idx][fieldType] = value;\r\n            }\r\n            return updatedTempData;\r\n        });\r\n    };\r\n\r\n    const addField = (wordIndex) => {\r\n        setTempData(prevTempData => {\r\n            const updatedTempData = [...prevTempData];\r\n            updatedTempData[0].sentences.push({ sentence: '', translation: '' });\r\n            return updatedTempData;\r\n        });\r\n    };\r\n\r\n    const removeField = (wordIndex, sentenceIndex) => {\r\n        setTempData(prevTempData => {\r\n            const updatedTempData = [...prevTempData];\r\n            if (updatedTempData[0] && updatedTempData[0].sentences) {\r\n                updatedTempData[0].sentences = updatedTempData[0].sentences.filter((_, i) => i !== sentenceIndex);\r\n            }\r\n            return updatedTempData;\r\n        });\r\n    };\r\n\r\n    const handlePublish = () => {\r\n        const updatedData = [...data];\r\n        updatedData[editIndex] = tempData[0]; // Обновляем конкретный элемент\r\n        setData(updatedData);\r\n        localStorage.setItem('wordsData', JSON.stringify(updatedData));\r\n        setShowEditPopup(false);\r\n        setEditIndex(null);\r\n    };\r\n\r\n    const handleCloseWithoutSaving = () => {\r\n        setShowEditPopup(false);\r\n        setTempData([]); // Сбрасываем временные данные при закрытии без сохранения\r\n    };\r\n\r\n    return (\r\n        <div className={mywords.mywords}>\r\n            <div className={mywords.mywords__wrapper}>\r\n                <div className={mywords.mywords__wrapper_header}>\r\n                    <div className={mywords.mywords__header_words}>\r\n                        <h1>My words</h1>\r\n                        <p>(you have {data.length < 2 ? `${data.length} word` : `${data.length} words`})</p>\r\n                    </div>\r\n                    <div className={mywords.mywords__buttons_block}>\r\n                        <Search formData={data} onSearch={handleSearch} />\r\n                        <div className={mywords.mywords__button}>\r\n                            <button className={mywords.mywords__button_button} onClick={() => setShowPopup(true)}>Add a word</button>\r\n                            {showPopup && <MyWordsPopup onClose={() => setShowPopup(false)} addWord={addWord} filteredWords={data} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={mywords.mywords__wrapper_body}>\r\n                {filteredData.map((item, index) => (\r\n                    <div key={index} className={mywords.mywords__container}>\r\n                        <div className={mywords.mywords__wrapper_content}>\r\n                            <div className={mywords.mywords__icons}>\r\n                                <img\r\n                                    className={mywords.mywords__icons_edit}\r\n                                    onClick={() => {\r\n                                        setShowEditPopup(true);\r\n                                        setEditIndex(index);\r\n                                        setTempData([data[index]]); \r\n                                    }}\r\n                                    src={edit}\r\n                                    alt='Edit'\r\n                                />\r\n                                {showEditPopup && editIndex === index && (\r\n                                    <EditPopup\r\n                                        onClose={handleCloseWithoutSaving}\r\n                                        index={index}\r\n                                        formData={tempData[0]} \r\n                                        handleInput={handleInput}\r\n                                        blurHandler={blurHandler}\r\n                                        addField={() => addField(editIndex)}\r\n                                        removeField={(idx) => removeField(editIndex, idx)}\r\n                                        handlePublish={handlePublish}\r\n                                        setShowEditPopup={setShowEditPopup}\r\n                                    />\r\n                                )}\r\n                                <img className={mywords.mywords__icons_close} onClick={() => { setShowDeletePopup(true); setDeleteIndex(index); }} src={close} alt='Close'></img>\r\n                                {showDeletePopup && deleteIndex === index && (\r\n                                    <DeletePopup onClose={() => setShowDeletePopup(false)} index={index} onDelete={() => handleDelete(index)} />\r\n                                )}\r\n                            </div>\r\n                            <div className={mywords.mywords__word}>\r\n                                <p>{item.word}</p>\r\n                            </div>\r\n                            <div className={mywords.mywords__list_sentence}>\r\n                                <ul>\r\n                                    {item.sentences.map((sentence, i) => (\r\n                                        <>\r\n                                        <li className={mywords.mywords_list__sentence} key={`sentence-${i}`}>{sentence.sentence} </li>\r\n                                        <li className={mywords.mywords_list__translation} key={`translation-${i}`}>{sentence.translation}</li>\r\n                                        </>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyWords;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}