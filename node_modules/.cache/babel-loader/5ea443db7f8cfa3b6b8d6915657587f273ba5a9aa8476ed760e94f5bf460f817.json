{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helen\\\\Desktop\\\\dev\\\\dictation\\\\french-app\\\\src\\\\components\\\\Content\\\\MyWords\\\\MyWordsPopup\\\\EditPopup\\\\EditPopup.jsx\",\n  _s = $RefreshSig$();\nimport editPopup from './EditPopup.module.css';\nimport close from './../../../../../images/close.png';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  formData,\n  handleInput,\n  onClose,\n  addField,\n  removeField,\n  handlePublish,\n  index\n}) => {\n  _s();\n  const [sentencedDirty, setSentenceDirty] = useState(false);\n  const [translationdDirty, setTranslationDirty] = useState(false);\n  if (!formData || typeof formData.word === 'undefined' || !formData.sentences) {\n    return null;\n  }\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'sentence':\n        setSentenceDirty(true);\n        break;\n      case 'tanslation':\n        setTranslationDirty(true);\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: editPopup.editPopup,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: editPopup.editPopup__wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: editPopup.editPopup__content,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: editPopup.editPopup__content_close,\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: close,\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__inputs,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => handleInput(e, index, 'word'),\n            onBlur: e => blurHandler(e, index, 'word'),\n            type: \"text\",\n            placeholder: \"word\",\n            value: formData.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), formData.sentences.map((sentence, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: editPopup.editPopup__inputs_repeated,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleInput(e, index, `sentence-${i}`),\n                onBlur: e => blurHandler(e, index, `sentence-${i}`),\n                name: `sentence-${i}`,\n                type: \"text\",\n                placeholder: \"sentence with word\",\n                value: sentence.sentence,\n                \"data-index\": i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleInput(e, index, `translation-${i}`),\n                onBlur: e => blurHandler(e, index, `translation-${i}`),\n                name: `translation-${i}`,\n                type: \"text\",\n                placeholder: \"sentence translation\",\n                value: sentence.translation,\n                \"data-index\": i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), formData.sentences.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                cursor: 'pointer',\n                marginLeft: '10px'\n              },\n              onClick: () => removeField(i),\n              children: \"\\u2013\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: editPopup.editPopup__buttons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addField,\n            children: \"add one more sentence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePublish(index),\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPopup, \"Qixar2xirLsBRHus9sk1oG/S2z8=\");\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["editPopup","close","useState","jsxDEV","_jsxDEV","EditPopup","formData","handleInput","onClose","addField","removeField","handlePublish","index","_s","sentencedDirty","setSentenceDirty","translationdDirty","setTranslationDirty","word","sentences","blurHandler","e","target","name","className","children","editPopup__wrapper","editPopup__content","editPopup__content_close","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","editPopup__inputs","onChange","onBlur","type","placeholder","value","map","sentence","i","style","display","editPopup__inputs_repeated","translation","length","cursor","marginLeft","editPopup__buttons","_c","$RefreshReg$"],"sources":["C:/Users/Helen/Desktop/dev/dictation/french-app/src/components/Content/MyWords/MyWordsPopup/EditPopup/EditPopup.jsx"],"sourcesContent":["import editPopup from './EditPopup.module.css';\r\nimport close from './../../../../../images/close.png';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst EditPopup = ({ formData, handleInput, onClose, addField, removeField, handlePublish, index }) => {\r\n\r\n    const [sentencedDirty, setSentenceDirty] = useState(false)\r\n    const [translationdDirty, setTranslationDirty] = useState(false)\r\n\r\n    if (!formData || typeof formData.word === 'undefined' || !formData.sentences) {\r\n        return null;\r\n    }\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name) {\r\n            case 'sentence':\r\n                setSentenceDirty(true)\r\n                break\r\n            case 'tanslation':\r\n                setTranslationDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={editPopup.editPopup}>\r\n            <div className={editPopup.editPopup__wrapper}>\r\n                <div className={editPopup.editPopup__content}>\r\n                    <button className={editPopup.editPopup__content_close} onClick={onClose}>\r\n                        <img src={close} alt='Close' />\r\n                    </button>\r\n                    <div className={editPopup.editPopup__inputs}>\r\n                        <input\r\n                            onChange={(e) => handleInput(e, index, 'word')}\r\n                            onBlur={(e) => blurHandler(e, index, 'word')}\r\n                            type='text'\r\n                            placeholder='word'\r\n                            value={formData.word}\r\n                        />\r\n                        {formData.sentences.map((sentence, i) => (\r\n                            <div key={i} style={{ display: 'flex' }}>\r\n                                <div className={editPopup.editPopup__inputs_repeated}>\r\n                                    <input\r\n                                        onChange={(e) => handleInput(e, index, `sentence-${i}`)}\r\n                                        onBlur={(e) => blurHandler(e, index, `sentence-${i}`)}\r\n                                        name={`sentence-${i}`}\r\n                                        type='text'\r\n                                        placeholder='sentence with word'\r\n                                        value={sentence.sentence}\r\n                                        data-index={i}\r\n                                    />\r\n                                    <input\r\n                                        onChange={(e) => handleInput(e, index, `translation-${i}`)}\r\n                                        onBlur={(e) => blurHandler(e, index, `translation-${i}`)}\r\n                                        name={`translation-${i}`}\r\n                                        type='text'\r\n                                        placeholder='sentence translation'\r\n                                        value={sentence.translation}\r\n                                        data-index={i}\r\n                                    />\r\n                                </div>\r\n                                {formData.sentences.length > 1 && (\r\n                                    <span style={{ cursor: 'pointer', marginLeft: '10px' }} onClick={() => removeField(i)}>–</span>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={editPopup.editPopup__buttons}>\r\n                        <button onClick={addField}>add one more sentence</button>\r\n                        <button onClick={() => handlePublish(index)}>done</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}